{"version":3,"file":"bundle.js","sources":["../node_modules/@vessel/core/src/metadata/Metadata.ts","../node_modules/@vessel/core/src/metadata/MetadataManager.ts","../node_modules/@vessel/core/src/injector/Container.ts","../node_modules/@vessel/core/src/boot/ContainerLoader.ts","../node_modules/@vessel/core/src/boot/package/AbstractPackageBoot.ts","../node_modules/@vessel/core/src/Kernel.ts","../node_modules/@vessel/core/src/base/BaseTypes.ts","../node_modules/@vessel/core/src/common/utils/Types.ts","../node_modules/@vessel/core/src/base/Vessel.ts","../node_modules/@vessel/core/src/services/Service.ts","../node_modules/@vessel/core/src/services/http/HttpMethods.ts","../node_modules/@vessel/core/src/services/RemoteService.ts","../node_modules/@vessel/core/src/services/Bridge.ts","../node_modules/@vessel/core/src/services/http/Request.ts","../node_modules/@vessel/core/src/services/http/HttpBridge.ts","../node_modules/@vessel/core/src/services/storage/StorageBridge.ts","../node_modules/@vessel/core/src/base/model/Proxy.ts","../node_modules/@vessel/core/src/base/model/Model.ts","../node_modules/@vessel/core/src/base/controller/Controller.ts","../node_modules/@vessel/dom/src/vnode/VirtualNode.ts","../node_modules/@vessel/dom/src/vdom/VirtualDOM.ts","../node_modules/@vessel/dom/src/boot/VirtualDOMBoot.ts","../node_modules/@vessel/core/src/base/view/View.ts","../node_modules/@vessel/core/src/base/collection/Collection.ts","../node_modules/@vessel/core/src/boot/app/App.ts","../node_modules/@vessel/core/src/common/utils/RegExpressions.ts","../node_modules/@vessel/core/src/common/utils/utilities.ts","../node_modules/@vessel/core/index.ts","../node_modules/@vessel/router/src/Strategy.ts","../node_modules/@vessel/router/src/Fragment.ts","../node_modules/@vessel/router/src/Router.ts","../node_modules/@vessel/router/src/boot/RouterBoot.ts","../node_modules/@vessel/router/src/Route.ts","../node_modules/@vessel/router/src/decorators/route.ts","../src/config/app.ts","../node_modules/@vessel/decorators/src/bootable.ts","../node_modules/@vessel/decorators/src/get.ts","../node_modules/@vessel/decorators/src/attr.ts","../node_modules/@vessel/decorators/src/identifier.ts","../node_modules/@vessel/decorators/src/validate.ts","../src/controller/TodoController.ts","../src/model/TodoModel.ts","../src/collection/TodoCollection.ts","../src/collection/ThirdCollection.ts","../src/collection/TestCollection.ts","../src/collection/FourthCollection.ts","../src/collection/FifthCollection.ts","../src/view/TodoView.ts","../src/service/TodoService.ts","../src/config/modules.ts","../src/main.ts"],"sourcesContent":["export class Metadata {\n\n    public static MODEL_ATTRIBUTES_KEY = 'attributes';\n\n    public static MODEL_IDENTIFIER_KEY = 'identifier';\n\n    public static DEPENDENCIES_KEY = 'dependencies';\n\n}","import { Metadata } from '@vessel/core';\n\n/**\n * class MetadataManager.\n *\n * Provides a way to store/retrieve\n * metadata info. about classes or\n * raw data needed to the packages\n * to work.\n *\n * This class manages the data\n * so it can be set by decorators\n * which are executed at runtime\n * and retrieved later by the\n * instantiated classes. If your\n * package doesn't use decorators\n * your package may not need the\n * MetadataManager.\n *\n * Metadata e.g. Which attributes are\n * being used by the model, what is\n * the name of the attribute in the\n * collection which is the model array\n * or what are the dependencies of a\n * class.\n *\n * Raw Data e.g. Object with paths\n * and routes.\n *\n */\nexport class MetadataManager {\n\n    /**\n     * Metadata container\n     * for the loaded classes.\n     */\n    private cache = {};\n\n    /**\n     * Container for\n     * raw data\n     */\n    private raw = {};\n\n    /**\n     * Setter/getters for\n     * built-in decorators.\n     */\n\n    public getDependencies(className) {\n        return this.retrieve(className, Metadata.DEPENDENCIES_KEY);\n    }\n\n    public setDependency(className, dep) {\n        this.createOrPush(className, Metadata.DEPENDENCIES_KEY, dep);\n        return this;\n    }\n\n    public getAttributes(className) {\n        return this.retrieve(className, Metadata.MODEL_ATTRIBUTES_KEY);\n    }\n\n    public setAttribute(className, attrName) {\n        this.createOrPush(className, Metadata.MODEL_ATTRIBUTES_KEY, attrName);\n        return this;\n    }\n\n    public getIdentifier(className) {\n        return this.retrieve(className, Metadata.MODEL_IDENTIFIER_KEY);\n    }\n\n    public setIdentifier(className, attrName) {\n        this.loadClass(className)[Metadata.MODEL_IDENTIFIER_KEY] = attrName;\n        return this;\n    }\n\n    public setConfig(cfgObj) {\n        return this.addRawData('app_config', cfgObj);\n    }\n\n    public getConfig(configName=undefined) {\n        return this.getRawData('app_config')[configName] ||\n            this.getRawData('app_config');\n    }\n\n    /**\n     * Setter for add any kind of metadata,\n     * so any dev can use decorators\n     * which need metadata without\n     * re-coding the core\n     */\n    public addMetadata(className, key, value) {\n        this.loadClass(className)[key] = value;\n        return this;\n    }\n\n    /**\n     * Getter for the setter right above.\n     */\n    public getMetadata(className, key) {\n        return this.retrieve(className, key);\n    }\n\n    /**\n     * Some packages need to store\n     * raw data not associated to any\n     * className.\n     */\n    public addRawData(key, value) {\n        this.raw[key] = value;\n        return this;\n    }\n\n    /**\n     * Getter for raw data.\n     */\n    public getRawData(key) {\n        return this.raw[key];\n    }\n\n    /**\n     * Checks if a given\n     * className is\n     * cached.\n     */\n    private has(className) {\n        return this.cache.hasOwnProperty(className);\n    }\n\n    /**\n     * Returns the class if it\n     * exists or creates and returns\n     * it if it doesn't.\n     */\n    private loadClass(className) {\n        if (!this.has(className)) {\n            this.cache[className] = {}\n        }\n        return this.cache[className];\n    }\n\n    /**\n     * Retrieves the information\n     * of metadata if it was\n     * set before.\n     */\n    private retrieve(className, key) {\n        if (!this.has(className)) {\n            return undefined;\n        }\n\n        return this.cache[className][key];\n    }\n\n    private createOrPush(className, key, value) {\n        let cached = this.loadClass(className);\n\n        if (!cached.hasOwnProperty(key)) {\n            cached[key] = [];\n        }\n\n        cached[key].push(value);\n        return value;\n    }\n\n}","import { getKeys, each, findItem, merge } from '@vessel/core';\n\n/**\n *\n * Limitations:\n *\n * - You can't use a injected property by\n * @get decorator within constructor or a method\n * called immediately within the constructor. But you\n * can always use this.get() or this.container.get()\n * within constructor. That is, because @get decorator\n * adds the dependencies but it doesn't inject them,\n * the dependencies are resolved when the module is\n * started from the container with a .get() or when\n * the module is a dependency of a module which is being\n * started with the container method .get(). That said,\n * using the container method .get() returns the dependency\n * immediately.\n */\nexport class Container {\n\n    private modules = {};\n\n    private cache = new WeakMap();\n\n    public register(opts) {\n        merge(this.modules, opts);\n        return this;\n    }\n\n    public registerSingleModule(name, module)Â {\n\n        if (!module) {\n            throw TypeError(\"Cannot registerSingleModule(), 'module' was \" + module);\n        }\n\n        let modules = this.modules;\n\n        if (!modules.hasOwnProperty(\"@\")) {\n            modules[\"@\"] = {}\n        }\n\n        if (modules[\"@\"].hasOwnProperty(name)) {\n            throw TypeError(\"Cannot registerSingleModule(), '\" + name + \"' is already registered\");\n        }\n\n        modules[\"@\"][name] = module;\n\n        return this.loadModule(module);\n    }\n\n    /**\n     * Gets a given module name.\n     */\n    public get(name) {\n        return this.resolveDependencies(name);\n    }\n\n    public remove(constructor) {\n        return this.cache.delete(constructor);\n    }\n\n    /**\n     * Loads a module by its constructor,\n     * if it's already instantiated it will\n     * return the instance, otherwise it will\n     * instantiate and then return it.\n     *\n     * It can be used to get an instance directly\n     * without its name but it will not resolve\n     * its @get() dependencies.\n     */\n    public loadModule(constructor) {\n        let cache = this.cache;\n\n        if (!cache.has(constructor))\n            cache.set(constructor, new constructor());\n\n        return cache.get(constructor);\n    }\n\n    /**\n     * Gets the dependencies of a given className.\n     *\n     * At this time, metadataManager cannot be loaded by\n     * container.get(). That is, because the container.get()\n     * of the injector needs the MetadataManager to get the\n     * dependencies, so we manually load the dependency\n     * @metadata_manager (which is already registered\n     * within ContainerLoader) avoiding an unkind infinite loop :)\n     */\n    private getDependencies(className) {\n        let metadataConstructor = this.modules['@']['@metadata_manager'],\n            metadataManager = this.loadModule(metadataConstructor);\n        return metadataManager.getDependencies(className);\n    }\n\n    /**\n     * Resolves dependencies for a given module, recursively\n     * injecting its dependencies.\n     */\n    private resolveDependencies(name) {\n        let constructor = this.findModuleByName(name);\n\n        if (!constructor) {\n            throw new TypeError(\"Attempt to get \" +\n                \"non-existent module: '\" +\n                name +\"'. Did you register it?\");\n        }\n\n        let dependencies = this.getDependencies(constructor.name),\n            topParent = {\n                name: name,\n                constructor: constructor\n            };\n\n        each(dependencies, function(item){\n            this.inject(item.depName, item.attrName, topParent);\n        }, this);\n\n        return this.loadModule(constructor);\n    }\n\n    /**\n     * The purpose of this function is to\n     * get a @get('registrated_module_name') injected.\n     *\n     * All children dependencies are recursively resolved.\n     *\n     * The top parent of each container.inject() is\n     * the very first dependency.\n     *\n     * e.g. For a @get('module.name') the very first\n     * dependency is 'module.name', which will be injected\n     * to an instantiated constructor passed in as the\n     * 'constructor' parameter.\n     *\n     * @param depName is the current dependency name.\n     * @param attrName is the current attribute name to be injected on.\n     * @param topParent is an object with the name and constructor of\n     * the topParent dependency (not the module where we are injecting).\n     * @param parents is an array with the dependencies for a single @get().\n     * @param constructor is where the first dep will be injected.\n     *\n     */\n    private inject(depName, attrName, topParent, parents=[], constructor=null) {\n        let depConstructor = this.findModuleByName(depName);\n\n        if (!depConstructor) {\n            throw new TypeError(\"Injection error on '\"+topParent.name+\n                \"': Attempt to inject non-existent dependency: '\"\n                + depName + \"'. Did you register it?\");\n        }\n\n        if (this.isCircular(depName, parents, topParent.name)) {\n            throw new RangeError(\"Circular dependency detected: \"+\n                \"module injection was impossible. Attempting to \"+\n                \"inject '\" + depName + \"' which have tried to \"+\n                \"resolve a parent dependency.\");\n        }\n\n        let depDependencies = this.getDependencies(depConstructor.name);\n\n        parents.push(depName);\n\n        each(depDependencies, function(dep) {\n            this.inject(dep.depName, dep.attrName, topParent, parents, depConstructor);\n        }, this);\n\n        // Only the top-parent dependency enters here.\n\n        if (parents.length === 1) {\n            // Inject the very first parent dependency\n            // to the module prototype.\n            let topParentInstance = this.loadModule(topParent.constructor),\n                topDependencyInstance = this.loadModule(depConstructor);\n            return topParentInstance[attrName] = topDependencyInstance;\n        }\n\n        // Children dependencies enter here.\n\n        parents.pop();\n        // Inject the dependency to the parent prototype.\n            let topDepInstance = this.loadModule(constructor),\n                depInstance = this.loadModule(depConstructor);\n        return topDepInstance[attrName] = depInstance;\n    }\n\n    /**\n     * Find a module by its name, when a\n     * match is found, the loop stops.\n     *\n     * Returns the constructor if a module\n     * is found.\n     */\n    private findModuleByName(queryName) {\n        let modules = this.modules,\n            keys = getKeys(modules),\n            len = keys.length;\n        for (let i = 0; i < len; i++) {\n            let moduleType = keys[i],\n                module = modules[moduleType];\n            if (module && module.hasOwnProperty(queryName))\n                return modules[moduleType][queryName];\n        }\n        return null;\n    }\n\n    private isCircular(depName, parents, topParentName) {\n        return depName === topParentName || findItem(parents, depName);\n    }\n}","import { MetadataManager } from '@vessel/core';\nimport { Container } from '@vessel/core';\n\n/**\n * Loads the injector Container\n * and registers the MetadataManager\n * so the injector is ready to use.\n *\n * It is needed to use decorators which\n * use metadata and to inject dependencies.\n */\nexport class ContainerLoader {\n\n    public constructor() {\n        this.boot();\n    }\n\n    public boot() {\n        return this.registerTo(new Container());\n    }\n\n    private registerTo(container) {\n        container.registerSingleModule('@metadata_manager', MetadataManager);\n        return container;\n    }\n\n}","import { BaseApp } from '../app/App';\nimport { Container }  from '@vessel/core';\n\nexport abstract class AbstractPackageBoot {\n    protected abstract VERSION: string;\n    abstract setup(namespace: BaseApp, container: Container);\n    abstract register(container: Container);\n}","import {Vessel, each } from '@vessel/core';\n\n/**\n * Heart of Vessel.\n *\n * Manages the packages, services,\n * injector and configuration.\n */\nexport class Kernel {\n\n    private VERSION = '1.0.0-PRE';\n\n    private app;\n\n    public constructor(app) {\n        this.app = app;\n    }\n\n    public boot() {\n        this.setGlobals()\n            .init();\n    }\n\n    public setGlobals() {\n        window[this.app.getGlobalName()] = this.app;\n        return this;\n    }\n\n    get container() {\n        return Vessel.$container;\n    }\n\n    private setAppContainer(container) {\n        this.app.container = container;\n        return this;\n    }\n\n    private registerDependencies(container) {\n        let registrations = this.app.registerModules();\n        container.register(registrations);\n        return this;\n    }\n\n    private bootPackages() {\n        let bootPackages = this.app.registerPackages();\n        return this.loadPackages([bootPackages]);\n    }\n\n    private loadPackages(arr) {\n        let namespace = this.app,\n            container = namespace.container;\n        each(arr, function(pkgs) {\n           each(pkgs, function(pkg){\n               pkg.register(container);\n               pkg.setup(namespace, container);\n           });\n        });\n        return this;\n    }\n\n    private registerAppConfig() {\n        let config = this.app.registerConfig();\n        return this.container.get('@metadata_manager')\n                   .setConfig(config);\n    }\n\n    private init() {\n\n        let container = this.container;\n\n        if (!container) {\n            throw new Error(\"Cannot register dependencies without \" +\n                \"the injector package.\");\n        }\n\n        this.registerDependencies(container)\n            .setAppContainer(container)\n            .bootPackages()\n            .registerAppConfig();\n\n        return this;\n    }\n\n}","export class BaseTypes {\n\n    public static VESSEL = 'vessel';\n\n    public static MODEL = 'model';\n\n    public static CONTROLLER = 'controller';\n\n    public static COLLECTION = 'collection';\n\n    public static VIEW = 'view';\n\n    public static SERVICE = 'service';\n\n    public static REMOTE_SERVICE = 'remote_service';\n\n    public static BRIDGE = 'bridge';\n\n    public static HTTP_BRIDGE = 'http_bridge';\n\n    public static STORAGE_BRIDGE = 'storage_bridge';\n\n}","export class Types {\n\n    public static STRING = 'string';\n\n    public static OBJECT = 'object';\n\n    public static FUNCTION = 'function';\n\n    public static NUMBER = 'number';\n}","import {isSupported, ContainerLoader, Container, BaseTypes} from \"@vessel/core\";\n\n/**\n * Vessel's Main class.\n *\n * Base classes will inherit\n * this class.\n */\nexport class Vessel {\n\n    protected _type = BaseTypes.VESSEL;\n\n    /**\n     * Container\n     *\n     * Vessel.$container is accessible\n     * by decorators executed at runtime\n     *\n     */\n    public static $container: Container = new ContainerLoader().boot();\n\n    public static can = Vessel.detectBrowserFeatures();\n\n    public static detectBrowserFeatures() {\n        return {\n            WeakMap: isSupported( (<any>window).WeakMap ),\n            pushState: isSupported( <any>window.history )\n            && isSupported( <any>window.history.pushState),\n            onhashchange: \"onhashchange\" in window\n        }\n    }\n\n    /**\n     * Container: Alias\n     *\n     * Alias so the instances of Views,\n     * Collections, Services, etc. can\n     * access container with this.container\n     *\n     */\n    get container(): Container {\n        return Vessel.$container;\n    }\n\n    protected getClassName(): string {\n        return this.constructor.name;\n    }\n\n    protected getType() {\n        return this._type;\n    }\n\n    protected get(module: string): any {\n        return this.container.get(module);\n    }\n\n\n}","import { BaseTypes, Vessel } from '@vessel/core';\n\nexport class Service extends Vessel {\n\n    protected _type = BaseTypes.SERVICE;\n\n}","export class HttpMethods {\n\n    public static GET = 'GET';\n\n    public static POST = 'POST';\n\n    public static PUT = 'PUT';\n\n    public static DELETE = 'DELETE';\n\n}","import { Service } from './Service';\nimport { isEmpty, isGet, each, BaseTypes } from '@vessel/core';\nimport { HttpMethods } from  './http/HttpMethods';\nimport { Request } from \"./http/Request\";\n\nexport class RemoteService extends Service {\n\n    protected _type = BaseTypes.REMOTE_SERVICE;\n\n    protected getRemoteUrl(): string {\n        return this.get('@metadata_manager')\n                   .getConfig('remoteUrl');\n    }\n\n    protected newAjaxRequest(request: Request) {\n        let url = request.fullUrl,\n            method = request.getMethod(),\n            headers = request.getHeaders(),\n            params = request.getParameters(),\n            body = request.getBody();\n\n        return new Promise( (resolve, reject) => {\n            let xhttp = new XMLHttpRequest();\n\n            xhttp.onload = function() {\n                if (xhttp.status === 200) {\n                    resolve(xhttp.response);\n                } else {\n                    reject(xhttp.statusText);\n                }\n            };\n\n            xhttp.onerror = function() {\n                reject(\"Network error.\")\n            };\n\n            xhttp.open(method, url);\n\n            each(headers, function(header, value){\n               xhttp.setRequestHeader(header, value);\n            });\n\n            if ( isGet(method) ) {\n                xhttp.send();\n            } else {\n                let payload = isEmpty(body) ? params : JSON.stringify(body);\n\n                if (!payload) {\n                    throw new TypeError(\"newAjaxRequest: Attempt to send a post request \" +\n                        \"with no parameters nor body within the request\");\n                }\n\n                xhttp.send(payload);\n            }\n        });\n    }\n\n\n    protected getRequest(request: Request) {\n        return this.newAjaxRequest( this.setMethod(request, HttpMethods.GET) );\n    }\n\n    protected postRequest(request: Request) {\n        return this.newAjaxRequest( this.setMethod(request, HttpMethods.POST) );\n    }\n\n    protected putRequest(request: Request) {\n        return this.newAjaxRequest( this.setMethod(request, HttpMethods.PUT) );\n    }\n\n    protected removeRequest(request: Request) {\n        return this.newAjaxRequest( this.setMethod(request, HttpMethods.DELETE) );\n    }\n\n    private setMethod(request: Request, method: string) {\n        if ( !request.getMethod() ) {\n            request.setMethod(method);\n        }\n        return request;\n    }\n}","import { RemoteService } from './RemoteService';\nimport { BaseTypes, Types } from '@vessel/core';\n\n\nexport abstract class Bridge extends RemoteService {\n\n    protected _type = BaseTypes.BRIDGE;\n\n}","import { each, toInitialUpperCase, RegExpressions } from '@vessel/core';\n\n\nexport class Request {\n\n    private url = '';\n\n    private method = '';\n\n    private headers = {};\n\n    private body = null;\n\n    private parameters = '';\n\n    get fullUrl() {\n        return this.url + this.parameters;\n    }\n\n    public constructor(opts=null) {\n        if (opts) {\n            this.setDefaults(opts);\n        }\n    }\n\n    public setUrl(url) {\n        this.url = url;\n\n        return this;\n    }\n\n    public getUrl() {\n        return this.url;\n    }\n\n    public setBody(body) {\n        this.body = body;\n\n        return this;\n    }\n\n    public getBody() {\n        return this.body;\n    }\n\n    public setHeaders(headers) {\n        this.headers = headers;\n\n        return this;\n    }\n\n    public getHeaders() {\n        return this.headers;\n    }\n\n    public setParameters(parameters) {\n        let result = '?';\n        each(parameters, function(param, value) {\n            result += param + '=' + value + '&';\n        }, this);\n        this.parameters = result.replace(RegExpressions.LAST_AMPERSAND, '');\n\n        return this;\n    }\n\n    public getParameters() {\n        return this.parameters;\n    }\n\n    public setMethod(method) {\n        this.method = method;\n\n        return this\n    }\n\n    public getMethod() {\n        return this.method;\n    }\n\n    private setDefaults(opts) {\n        let setter;\n        each(opts, function(opt, value) {\n            if (!this.hasOwnProperty(opt)) {\n                throw new TypeError(\"Request: parameter error, option \" + opt + \" does \" +\n                    \"not exist.\");\n            }\n            setter = this[\"set\" + toInitialUpperCase(opt)];\n            setter.call(this, value);\n\n        }, this);\n\n        return this;\n    }\n\n}","import { Bridge } from '../Bridge';\nimport { merge, isModel, isCollection, BaseTypes, Types } from '@vessel/core';\nimport { Request } from './Request';\n\nexport abstract class HttpBridge extends Bridge {\n\n    protected abstract endPoint: string;\n\n    protected _type = BaseTypes.HTTP_BRIDGE;\n\n    protected abstract getResponse(response);\n\n    public abstract create(response, model);\n\n    public abstract read(response, obj);\n\n    public abstract update(response, model);\n\n    public abstract destroy(response);\n\n    public createRequest(obj, requestCustomOptions=null) {\n        let requestOptions = this.buildJSONRequest(obj, requestCustomOptions);\n        // If it's POST (create) we don't\n        // want the {id} to be added to\n        // the url.\n        //\n        // E.g.:    /todos/{id} -> /todos\n        if ( !requestOptions.hasOwnProperty('url') ) {\n            requestOptions.url = this.getPartialUrl();\n        }\n        return this.bridgeRequest(obj, this.postRequest, this.create, requestOptions);\n    }\n\n    public readRequest(obj, requestCustomOptions=null) {\n        return this.bridgeRequest(obj, this.getRequest, this.read, requestCustomOptions);\n    }\n\n    public updateRequest(obj, requestCustomOptions=null) {\n        let requestOptions = this.buildJSONRequest(obj, requestCustomOptions);\n        return this.bridgeRequest(obj, this.putRequest, this.update, requestOptions);\n    }\n\n    public destroyRequest(obj, requestCustomOptions=null) {\n        let requestOptions = this.buildJSONRequest(obj, requestCustomOptions);\n        return this.bridgeRequest(obj, this.removeRequest, this.destroy, requestOptions);\n    }\n\n\n    protected getPartialUrl() {\n        return this.getRemoteUrl() + this.endPoint;\n    }\n\n    protected getObjUrl(obj) {\n        if ( isModel(obj) ) {\n            return this.getPartialUrl() + '/' + this.extractIdentifier(obj);\n        } else if ( isCollection(obj) ) {\n            return this.getPartialUrl();\n        }\n    }\n\n    // isModel Alias\n    protected isModel(obj) {\n        return isModel(obj);\n    }\n\n    // isCollection Alias\n    protected isCollection(obj) {\n        return isCollection(obj);\n    }\n\n    private buildJSONRequest(obj, requestCustomOptions) {\n        let requestOptions = {\n            body: obj.getAttrs(),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n        return merge(requestOptions, requestCustomOptions);\n    }\n\n    private extractIdentifier(obj) {\n        let id = obj.getIdentifier();\n\n        if ( !this.isValidIdentifier(id) ) {\n            throw new TypeError(\"Bridge: Invalid identifier '\" +\n                id + \"' (\" + typeof id + \").\");\n        }\n\n        return id;\n    }\n\n    private isValidIdentifier(exp) {\n        return typeof exp === Types.STRING && exp !== \"\" ||\n               typeof exp ===  Types.NUMBER;\n    }\n\n    private bridgeRequest(obj, requestCb, processCb, requestOptions) {\n        let self = this,\n            request,\n            processedData,\n            requestPromise,\n            data;\n\n        request = new Request();\n        request.setDefaults(requestOptions);\n\n        if ( !requestOptions.hasOwnProperty('url') ) {\n            request.setUrl(this.getObjUrl(obj));\n        }\n\n        return new Promise((resolve, reject) => {\n\n            requestPromise = requestCb.call(self, request);\n\n            requestPromise.then(\n                function onSuccess(response) {\n                    data = self.getResponse(response);\n                    processedData = processCb.call(self, data, obj);\n                    resolve(processedData);\n                },\n\n                function onError(response) {\n                    reject(response);\n                }\n            );\n        });\n    }\n\n}","import { Bridge } from '../Bridge';\nimport { BaseTypes } from '@vessel/core';\n\nexport abstract class StorageBridge extends Bridge {\n\n    protected _type = BaseTypes.STORAGE_BRIDGE;\n\n    public abstract fetch();\n\n    public abstract save();\n\t\n}","import { defineProp } from '@vessel/core';\n\n/**\n * Attribute proxy.\n *\n * Intercepts each setter/getter of\n * each model's attribute so it can\n * trigger events.\n */\nexport class AttribProxy {\n\n    /**\n     * Stores the state of the\n     * model's attributes.\n     *\n     * @type {any{} }\n     */\n    private data = <any>{};\n\n    /**\n     * Setups a new attribute, installs\n     * the getter and setter interceptors.\n     *\n     * @param name\n     */\n    public addAttribute( name: string ) {\n        this.data[name] = \"\";\n        defineProp(this, name,\n            function getter() {\n                return this.data[name];\n            },\n            function setter( value ) {\n                this.data[name] = value;\n            }\n        )\n    }\n\n    public getAttrs() {\n        return this.data;\n    }\n\n}","import { AttribProxy } from './Proxy';\nimport { Vessel, isArrayEmpty, each, toInitialUpperCase, BaseTypes } from '@vessel/core';\nimport { ModelInterface } from '@vessel/types/definitions';\n\n/**\n * BaseModel class\n */\nexport class Model extends Vessel implements ModelInterface {\n\n    protected _type = BaseTypes.MODEL;\n\n    /**\n     * Stores the bridge service.\n     */\n    protected bridge: string;\n\n    /**\n     * Stores the attribute proxy.\n     */\n    protected attr: any;\n\n    public static MODEL_PROXY_PROPERTY_NAME = 'attr';\n\n\n    public constructor() {\n        super();\n        this._createProxy();\n    }\n\n    /**\n     * Provides a way to set multiple\n     * attributes at once.\n     *\n     * @param attrs\n     */\n    public set( attrs ) {\n        each(attrs, function(attrName, value){\n            let boundFn = this['set' + toInitialUpperCase(attrName)];\n            boundFn.call(this, value);\n        }, this);\n        return this;\n    }\n\n    public save(requestOptions=null) {\n        let bridge = this.getBridge();\n        if (this.isNew()) {\n            return bridge.createRequest(this, requestOptions);\n        }\n        return bridge.updateRequest(this, requestOptions);\n    }\n\n    public fetch(requestOptions=null) {\n        return this.getBridge().readRequest(this, requestOptions=null);\n    }\n\n    public remove(requestOptions=null) {\n        return this.getBridge().destroyRequest(this, requestOptions=null);\n    }\n\n    public getIdentifier() {\n        let attrName = this\n            .get('@metadata_manager')\n            .getIdentifier(this.getClassName());\n        return this[Model.MODEL_PROXY_PROPERTY_NAME][attrName];\n    }\n\n    public getAttrs() {\n        return this[Model.MODEL_PROXY_PROPERTY_NAME].getAttrs();\n    }\n\n    protected isNew() {\n        return !this.getIdentifier();\n    }\n\n    /**\n     * Instances the attribute proxy, it adds each\n     * attribute defined in the model with the\n     * 'attr' decorator to the proxy.\n     * @private\n     */\n    protected _createProxy() {\n        let attrs,\n            proxyPropName = Model.MODEL_PROXY_PROPERTY_NAME,\n            metadataManager = this.get('@metadata_manager');\n\n        attrs = metadataManager.getAttributes(this.getClassName());\n\n        if ( isArrayEmpty(attrs) ) {\n            throw TypeError(\"Attempt to create a proxy\" +\n                \" with no metadata.\");\n        }\n\n        this[proxyPropName]= new AttribProxy();\n\n        each(attrs, function(attrName) {\n            this[proxyPropName].addAttribute(attrName);\n        }, this);\n    }\n\n    /**\n     * Whenever a validation takes place, this\n     * function will be invoked. All built-in\n     * general validations will be checked here.\n     *\n     * This function is responsible for return\n     * the results of the custom defined\n     * validationFn.\n     *\n     * @param value\n     * @param validationFn\n     * @returns boolean\n     * @private\n     */\n    protected _validate( value, validationFn ) {\n        return validationFn(value);\n    }\n\n    protected getBridge() {\n        let bridge = this.bridge;\n\n        if (!bridge) {\n            throw new TypeError(\"Bridge does not exist. Define a bridge \" +\n                \"for \" + this.getClassName());\n        }\n        return this.get(bridge);\n    }\n\n}","import { Vessel, BaseTypes } from '@vessel/core';\n\nexport class Controller extends Vessel {\n\n    protected _type = BaseTypes.CONTROLLER;\n\n    protected render(viewName, renderData) {\n      return this.get('@vdom').render(viewName, renderData);\n    }\n\n    protected unrender(viewName) {\n        return this.get('@vdom').unrender(viewName);\n    }\n\n    protected route(routeName, routeParams) {\n        return this.get('@router').route(routeName, routeParams);\n    }\n\n    protected routeExec(routeName, ...args) {\n        return this.get('@router').route(routeName, args);\n    }\n\n\n}","import {toString, merge, each, Vessel} from '@vessel/core';\n\nexport class VirtualNode {\n\n    public type;\n\n    public children = [];\n\n    public attributes = {};\n\n    private element = null;\n\n    public constructor(type) {\n        this.type = type;\n    }\n\n    public setEl(elem: HTMLElement) {\n        this.element = elem;\n        return this;\n    }\n\n    public el() {\n        return this.element;\n    }\n\n    public index() {\n        // Internet explorer 6,7,8 will include\n        // comment nodes.\n        // https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children#Browser_compatibility\n        //\n        let el = this.el();\n        return Array.prototype.indexOf.call(el.parentElement.children, el);\n    }\n\n    public set(props) {\n        merge(this.attributes, props);\n        return this;\n    }\n\n    public text(str: string) {\n        let children = this.children;\n        if (children.length === 0) children.push(toString(str));\n        return this;\n    }\n\n    public appendTo($parent) {\n        $parent.children.push(this);\n        return this;\n    }\n\n    public append($child) {\n        this.children.push($child);\n        return this;\n    }\n\n    public css(attrs) {\n        let style = '';\n        each(attrs, function(attr, value){\n           style += attr + \":\" + value + \";\";\n        });\n        return this.set({\n            'style': style\n        });\n    }\n    \n    public link(url) {\n        return this.set({\n            href: url\n        });\n    }\n\n    public event(name, fn) {\n        this.attributes[name] = fn;\n        return this;\n    }\n\n    public click(fn) {\n        return this.set({\n            'onclick': fn\n        })\n    }\n\n    public dblClick(fn) {\n        return this.set({\n            'ondblclick': fn\n        })\n    }\n\n    public change(fn) {\n        return this.set({\n            'onchange': fn\n        })\n    }\n\n    public mouseOver(fn) {\n        return this.set({\n            'onmouseover': fn\n        })\n    }\n\n    public mouseMove(fn) {\n        return this.set({\n            'onmousemove': fn\n        })\n    }\n\n    public mouseOut(fn) {\n        return this.set({\n            'onmouseout': fn\n        })\n    }\n\n    public mouseEnter(fn) {\n        return this.set({\n            'onmouseenter': fn\n        })\n    }\n\n    public mouseLeave(fn) {\n        return this.set({\n            'onmouseleave': fn\n        })\n    }\n\n    public mouseUp(fn) {\n        return this.set({\n            'onmouseup': fn\n        })\n    }\n\n    public keyDown(fn) {\n        return this.set({\n            'onkeydown': fn\n        })\n    }\n\n    public keyUp(fn) {\n        return this.set({\n            'onkeyup': fn\n        })\n    }\n\n    public keyPress(fn) {\n        return this.set({\n            'onkeypress': fn\n        })\n    }\n\n    public resize(fn) {\n        return this.set({\n            'onresize': fn\n        })\n    }\n\n    public focus(fn) {\n        return this.set({\n            'onfocus': fn\n        })\n    }\n\n    public focusIn(fn) {\n        return this.set({\n            'onfocusin': fn\n        })\n    }\n\n    public focusOut(fn) {\n        return this.set({\n            'onfocusout': fn\n        })\n    }\n\n    public select(fn) {\n        return this.set({\n            'onselect': fn\n        })\n    }\n\n    public model() {\n\n    }\n\n}","import {Vessel, Types, isString, each, isEvent, formatEvent} from '@vessel/core';\nimport { VirtualNode } from '../vnode/VirtualNode';\n\n\nexport class VirtualDOM {\n\n    public static create(type): VirtualNode {\n        return new VirtualNode(type);\n    }\n\n    public render(viewName: string, renderData: any) {\n        let $new, $old, parent,\n            view = Vessel.$container.get(viewName);\n\n        view.setState(renderData);\n\n        $new = view.render();\n        $old = view.getLastNode();\n        parent = view.getParentElement();\n\n        return view.setLastNode( this.updateNode(parent, $new, $old) );\n    }\n\n    public unrender(viewName: string) {\n        let view,\n            container = Vessel.$container;\n\n        view = container.get(viewName);\n\n        this.removeChild(view.getParentElement(), view.getLastNode().index());\n        return Vessel.$container.remove(view);\n    }\n\n\n    public updateNode(parent, $newNode, $oldNode=undefined, childIndex = 0) {\n        if (!$newNode) {\n            this.removeChild(parent, childIndex);\n        } else if (!$oldNode) {\n            this.appendChild(parent, $newNode);\n        } else if (this.hasChanged($newNode, $oldNode)) {\n            this.replaceChild(parent, $newNode, childIndex);\n        } else if ($newNode.type) {\n            let nextParent = parent.childNodes[childIndex],\n                newChildrenLen = $newNode.children.length,\n                oldChildrenLen = $oldNode.children.length,\n                newAttr = $newNode.attributes,\n                oldAttr = $oldNode.attributes;\n\n            for (let attrName in newAttr || oldAttr) {\n                this.updateAttribute(\n                    nextParent,\n                    attrName,\n                    newAttr[attrName],\n                    oldAttr[attrName]\n                );\n            }\n\n            for (let currentChild = 0; currentChild < newChildrenLen || currentChild < oldChildrenLen; currentChild++) {\n                let $new = $newNode.children[currentChild],\n                    $old = $oldNode.children[currentChild];\n                this.updateNode(nextParent, $new, $old, currentChild);\n            }\n        }\n        return $newNode;\n    }\n\n    private updateAttribute(elem, attrName, newValue, oldValue) {\n        if (!newValue) {\n            this.removeAttribute(elem, attrName, oldValue)\n        } else if (!oldValue || oldValue !== newValue) {\n            this.setAttribute(elem, attrName, newValue);\n        }\n    }\n\n    private createRealElement($node: any ): any {\n\n        if (isString($node)) {\n            return document.createTextNode($node);\n        }\n\n        let $child,\n            elem = document.createElement($node.type),\n            children = $node.children;\n\n        this.setAttributes(elem, $node.attributes);\n\n        if (children) {\n            for (let i = 0, len = children.length; i < len; i++) {\n                $child = children[i];\n                elem.appendChild(this.createRealElement($child));\n            }\n        }\n\n        $node.setEl(elem);\n\n        return elem;\n\n    }\n\n    private hasChanged($node1, $node2): boolean {\n        return typeof $node1 !== typeof $node2 ||\n            typeof $node1 === Types.STRING && $node1 !== $node2 ||\n            $node1.type != $node2.type;\n    }\n\n    private setAttribute(elem, name, value) {\n        elem.setAttribute(name, value);\n    }\n\n    private removeAttribute(elem, name, value) {\n        elem.removeAttribute(name, value);\n    }\n\n    private setAttributes(elem, attributes) {\n        each(attributes, function(name, value){\n            if (isEvent(name)) {\n                this.addEvent(elem, name, value);\n            } else {\n                this.setAttribute(elem, name, value);\n            }\n        }, this);\n    }\n\n    private addEvent(elem, eventName, boundFn) {\n        return elem.addEventListener(formatEvent(eventName), boundFn);\n    }\n\n    private removeChild(parent, index) {\n        parent.removeChild(parent.childNodes[index]);\n    }\n\n    private appendChild(parent, $newNode) {\n        parent.appendChild(this.createRealElement($newNode));\n    }\n\n    private replaceChild(parent, $newNode, index) {\n        parent.replaceChild(this.createRealElement($newNode), parent.childNodes[index]);\n    }\n}\n","import { VirtualDOM } from '../vdom/VirtualDOM';\nimport { AbstractPackageBoot } from '@vessel/core';\n\nexport class VirtualDOMBoot extends AbstractPackageBoot {\n\n    protected VERSION = '1.0.0-DEV';\n\n    public register(container) {\n        container.registerSingleModule('@vdom', VirtualDOM);\n    }\n\n    public setup(namespace, container) {\n        namespace.router = container.get('@vdom');\n    }\n\n}\n\n\n","import { Vessel, merge, BaseTypes } from '@vessel/core';\n\nimport { VirtualNode, VirtualDOM } from '@vessel/dom';\n\n\nexport abstract class View extends Vessel {\n\n    protected _type = BaseTypes.VIEW;\n\n    protected state: any = {};\n\n    private $lastNode: VirtualNode;\n\n    protected setState(state) {\n        merge(this.state, state);\n        return this;\n    }\n\n    public getLastNode(): VirtualNode {\n        return this.$lastNode;\n    }\n\n    public setLastNode($node: VirtualNode): View {\n        this.$lastNode = $node;\n\n        return this;\n    }\n\n    public getParent(): string {\n        return this.parent;\n    }\n\n    public getParentElement(): Element {\n        return document.querySelector(this.getParent());\n    }\n\n    protected route(routeName, routeParams) {\n        return this.get('@router').route(routeName, routeParams);\n    }\n\n    protected routeExec(routeName, ...args) {\n        return this.get('@router').routeExec(routeName, args);\n    }\n\n    protected create(nodeType: string): VirtualNode {\n        return VirtualDOM.create(nodeType);\n    }\n\n    abstract parent: string;\n    abstract render(...args: any[]): VirtualNode;\n\n}\n","import { Vessel, Model, filterOne, filter, matchPair, map, BaseTypes } from '@vessel/core';\nimport { ModelInterface } from '@vessel/types/definitions';\n\n\nexport abstract class Collection extends Vessel {\n\n    protected _type = BaseTypes.COLLECTION;\n\n    protected _collection: ModelInterface[] = [];\n\n    protected model;\n\n    /**\n     * Stores the bridge service.\n     */\n    protected bridge: string;\n\n    public add(model) {\n        let collection = this.getCollection();\n\n        if (! (model instanceof this.getModel()) ) {\n            throw new TypeError(this.getClassName() + ': cannot ' +\n                'add ' + model + ' (' + typeof model + ') as a model of ' +\n                this.getModel().getClassName());\n        }\n\n        collection.push(model);\n\n        return model;\n    }\n\n    public fetch(requestOptions=null) {\n        return this.getBridge().readRequest(this, requestOptions);\n    }\n\n    public find(attrs) {\n        return filterOne(this.getCollection(), function(item){\n            return matchPair(item[Model.MODEL_PROXY_PROPERTY_NAME], attrs);\n        });\n    }\n\n    public findAll(attrs) {\n        return filter(this.getCollection(), function(item){\n            return matchPair(item[Model.MODEL_PROXY_PROPERTY_NAME], attrs);\n        });\n    }\n\n    public pull(attrName) {\n        return map(this.getCollection(), function(item){\n            return item[Model.MODEL_PROXY_PROPERTY_NAME][attrName];\n        });\n    }\n\n    public sort() {\n\n    }\n\n    public remove() {\n\n    }\n\n    public removeById() {\n\n    }\n\n    protected getModel() {\n        return this.model;\n    }\n\n    protected getCollection() {\n        return this._collection;\n    }\n\n    protected getBridge() {\n        let bridge = this.bridge;\n\n        if (!bridge) {\n            throw new TypeError(\"Bridge does not exist. Define a bridge \" +\n                \"for \" + this.getClassName());\n        }\n        return this.get(bridge);\n    }\n\n}","\nexport abstract class BaseApp {\n\n\tpublic abstract getGlobalName();\n\tpublic abstract registerModules();\n\tpublic abstract registerPackages();\n\n}\n","export class RegExpressions {\n\n    public static EVENT_EXP = /^on/i;\n\n    public static LAST_AMPERSAND = /\\&$/;\n\n    public static LAST_URL_SLASH = /\\/+$/;\n\n    public static ROUTE_PATH_PARAMETER = /(:)(\\w+)/g;\n\n    public static GET_PARAMETER = /\\?([\\w\\&\\=]*)/;\n}","import { BaseTypes } from '@vessel/core';\nimport { Types } from './Types';\nimport { HttpMethods } from '@vessel/core';\nimport { RegExpressions } from './RegExpressions';\n\nexport function getDate() {\n\tconsole.log('Get date!');\n}\n\nexport function checkDate() {\n\tconsole.log('checkDate!');\n}\n\nexport function isSupported(feature) {\n\treturn typeof feature === Types.FUNCTION ||\n           typeof feature === Types.OBJECT;\n}\n\nexport function isArray(arr) {\n    return Array.isArray(arr);\n}\n\nexport function isEmpty(obj) {\n    if (obj == null) return true;\n    return getKeys(obj).length === 0;\n}\n\nexport function isArrayEmpty(arr) {\n    if (!arr) return true;\n    if (arr.length === 0) return true;\n    return false;\n}\n\nexport function isEvent(exp) {\n    return RegExpressions.EVENT_EXP.test(exp);\n}\n\nexport function isFunction(fn) {\n    if ( fn == undefined ) return false;\n    if ( typeof fn !== Types.FUNCTION ) return false;\n    return true;\n}\n\nexport function isString(exp: any) {\n    return typeof exp === Types.STRING;\n}\n\nexport function isObject(exp: any) {\n    return typeof exp === Types.OBJECT;\n}\n\nexport function isGet(method: string) {\n    return method === HttpMethods.GET;\n}\n\nexport function isModel(obj) {\n    return obj.getType() === BaseTypes.MODEL;\n}\n\nexport function isCollection(obj) {\n    return obj.getType() === BaseTypes.COLLECTION;\n}\n\nexport function each(obj, fn, context=null) {\n    var i, len, keys, item, result;\n    if (!obj) return;\n    if (isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n            result = fn.call(context, obj[i], i, obj);\n        }\n    } else {\n        keys = getKeys(obj);\n        for (i = 0, len = keys.length; i < len; i++) {\n            item = keys[i];\n            result = fn.call(context, item, obj[item], obj);\n        }\n    }\n    return result;\n}\n\nexport function matchPair(obj, attrs) {\n    var keys = getKeys(attrs),\n        len = keys.length,\n        key, i;\n    for (i = 0; i < len; i++) {\n        key = keys[i];\n        if (attrs[key] !== obj[key] || !(key in obj))\n            return false;\n    }\n    return true;\n}\n\nexport function map(arr, fn, context=null) {\n    let newArr = [], result;\n    each(arr, function(item, index) {\n        result = fn.call(context, item, index);\n        if ( result ) newArr.push(result);\n    });\n    return newArr;\n}\n\nexport function filter(obj, fn, context=null) {\n    let matches = [];\n    each(obj, function(item, index) {\n        if (fn.call(context, item, index, obj))\n            matches.push(item);\n    });\n    return matches;\n}\n\nexport function filterOne(arr, fn, context=null) {\n    let i, item, len = arr.length;\n    for (i = 0; i < len; i++) {\n        if (fn.call(context, item = arr[i], i, arr))\n            return item;\n    }\n    return false;\n}\n\nexport function merge(obj, obj2) {\n    let prop;\n    for (prop in obj2) {\n        try {\n            obj[prop] = isObject(obj2[prop]) ? merge(obj[prop], obj2[prop]) : obj2[prop];\n        } catch (e) {\n            obj[prop] = obj2[prop];\n        }\n    }\n    return obj;\n}\n\nexport function findItem(arr, value) {\n    return arr.indexOf(value) !== -1\n}\n\nexport function toString(exp) {\n    return exp + \"\";\n}\n\nexport function formatEvent(eventName) {\n    return eventName.slice(2).toLowerCase();\n}\n\nexport function removeLastSlash(url) {\n    return url.replace(RegExpressions.LAST_URL_SLASH, url);\n}\n\nexport function toInitialUpperCase(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function toRegExpPath(pathStr: string) {\n    return new RegExp('^'+pathStr.replace(RegExpressions.ROUTE_PATH_PARAMETER,\n                    \"([^\\/]+)\")+'$');\n}\n\nexport function defineProp(obj, prop, getter, setter) {\n    let descriptor = {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n    };\n    Object.defineProperty(obj, prop, descriptor);\n}\n\nexport function getKeys(obj) {\n    return Object.keys(obj);\n}\n\nexport function getCurrentUrl() {\n    return window.location.href;\n}\n","// Base\nexport { Metadata } from './src/metadata/Metadata';\nexport { MetadataManager } from './src/metadata/MetadataManager';\nexport { Container } from './src/injector/Container';\nexport { ContainerLoader } from './src/boot/ContainerLoader';\n\nexport { AbstractPackageBoot } from './src/boot/package/AbstractPackageBoot';\n\nexport { Kernel } from './src/Kernel';\n\nexport { BaseTypes } from './src/base/BaseTypes';\nexport { Types } from './src/common/utils/Types';\n\n\n\nexport { Vessel } from './src/base/Vessel';\n\n\nexport { Bridge } from './src/services/Bridge';\nexport { RemoteService } from './src/services/RemoteService';\nexport { Service } from './src/services/Service';\nexport { HttpMethods } from './src/services/http/HttpMethods';\nexport { HttpBridge } from './src/services/http/HttpBridge';\nexport { StorageBridge } from './src/services/storage/StorageBridge';\n\nexport { Model } from './src/base/model/Model';\nexport { Controller } from './src/base/controller/Controller';\nexport { View } from './src/base/view/View';\nexport { Collection } from './src/base/collection/Collection';\n\n\n// Boot\nexport { BaseApp } from './src/boot/app/App';\n\n// Common\nexport { RegExpressions } from './src/common/utils/RegExpressions';\nexport { MultipleKeyObject } from './src/common/utils/MultipleKeyObject';\nexport  *  from './src/common/utils/utilities';\n\n\n// Services\n\n","export class Strategy {\n\n    private currentStrategy;\n\n    public static HashStrategy = 'hash';\n\n    public static HistoryStrategy = 'history';\n\n    public constructor(strategy) {\n        this.currentStrategy = strategy;\n    }\n\n    public getStrategy() {\n        return this.currentStrategy\n    }\n\n    public setStrategy(strategy: string) {\n        this.currentStrategy = strategy;\n\n        return this;\n    }\n\n    public isHistory() {\n        return this.getStrategy() === Strategy.HistoryStrategy\n    }\n\n    public isHash() {\n        return this.getStrategy() === Strategy.HashStrategy\n    }\n\n}","import { Vessel, removeLastSlash, getKeys, getCurrentUrl} from '@vessel/core';\nimport { Router } from './Router';\n\nexport class Fragment {\n\n    private url: string;\n\n    private router: Router;\n\n    public constructor(url=undefined) {\n        this.router = this.container.get('@router');\n\n        if (url) {\n            this.setUrl(url);\n        } else {\n            this.findOutUrl();\n        }\n    }\n\n    private findOutUrl() {\n        return this.setUrl(\n            getCurrentUrl().replace(this.router.getBaseUrl(), '')\n        );\n    }\n\n    get container() {\n        return Vessel.$container;\n    }\n\n    public getUrl(): string {\n        return this.url;\n    }\n\n    public setUrl(url) {\n        this.url = removeLastSlash(url);\n\n        return this;\n    }\n\n    public resolve() {\n        let route = this.matchRoute();\n\n        // 404. Not Route Found\n        if (!route) return false;\n\n        Router.onRouteFound(route, this.getParams(route));\n    }\n\n    private matchRoute() {\n        let routes = this.router.getAllRoutes(),\n            routeNames = getKeys(routes);\n        for (let i = 0, len = routeNames.length; i < len; i++) {\n            let routeName = routeNames[i],\n                routeObj = routes[routeName];\n            if (routeObj.getRegExpPath().test(this.getUrl())) return routeObj;\n        }\n        return false;\n    }\n\n    private getParams(route) {\n        return route.getRegExpPath().exec(this.getUrl()).slice(1);\n    }\n\n}","import {Vessel, removeLastSlash, each } from '@vessel/core';\nimport { Strategy } from './Strategy';\nimport { Fragment} from './Fragment';\nimport { Route } from './Route';\n\nexport class Router {\n\n    private strategy: Strategy = new Strategy(Strategy.HistoryStrategy);\n\n    public boot() {\n        this.listen();\n    }\n\n    public setStrategy(strategy: Strategy) {\n        this.strategy = strategy;\n\n        return this;\n    }\n\n    public getStrategy(): Strategy {\n        return this.strategy;\n    }\n\n    public routeExec(routeName, args) {\n        let route = this.getRouteByName(routeName);\n        Router.onRouteFound(route, args);\n    }\n\n    private route(routeName, routeParamsObj=null) {\n        let generatedPath,\n            route = this.getRouteByName(routeName);\n\n        each(routeParamsObj, function(param, value) {\n            route.setParameter(param, value);\n        });\n\n        generatedPath = route.getResult();\n\n        this.push(generatedPath);\n        return new Fragment(generatedPath).resolve();\n    }\n\n\n    private push(path: string) {\n        let url = path ? this.getBaseUrl() + path : this.getBaseUrl();\n        window.history.pushState({}, '', url);\n    }\n\n    private listen() {\n        if (this.getStrategy().isHistory() && Vessel.can.pushState) {\n            window.addEventListener('popstate', Router.onRouteChange);\n        } else if (this.getStrategy().isHash() && Vessel.can.onhashchange) {\n            window.addEventListener('hashchange', Router.onRouteChange);\n\n        // fallback\n        } else {\n\n        }\n    }\n\n    public getRouteByName(name) {\n        return this.getAllRoutes()[name];\n    }\n\n    public getAllRoutes() {\n        return Vessel.$container\n            .get('@metadata_manager')\n            .getRawData('cached_routes');\n    }\n\n    public getBaseUrl() {\n        return removeLastSlash(Vessel.$container\n            .get('@metadata_manager')\n            .getConfig('baseUrl'));\n    }\n\n    public static onRouteChange() {\n        return new Fragment().resolve();\n    }\n\n    public static onRouteFound(route: Route, fragmentArgs) {\n        let controller = Vessel.$container.loadModule(route.getContext().constructor);\n        return route.getBound().apply(controller, fragmentArgs);\n    }\n\n\n}","import { Router } from '../Router';\nimport { AbstractPackageBoot } from '@vessel/core';\n\nexport class RouterBoot extends AbstractPackageBoot {\n\n    protected VERSION = '1.0.0-DEV';\n\n    public register(container) {\n        container.registerSingleModule('@router', Router);\n    }\n\n    public setup(namespace, container) {\n        namespace.router = container.get('@router').boot();\n    }\n\n}\n\n\n","export class Route {\n\n    private path: string;\n\n    private pathExp: RegExp;\n\n    private bound: Function;\n\n    private context: Function;\n\n    private generatedPath;\n\n    public constructor(private name: string) {}\n\n    public setParameter(param, value) {\n        let path = this.generatedPath\n                ? this.generatedPath\n                : this.path;\n        return this.generatedPath = path.replace(':'+param, value);\n    }\n\n    public getResult() {\n        let generated = this.generatedPath;\n        this.generatedPath = void 0;\n        return generated;\n    }\n\n    public getName() {\n        return this.name;\n    }\n\n    public getPath() {\n        return this.path;\n    }\n\n    public setPath(path) {\n        this.path = path;\n\n        return this;\n    }\n\n    public getRegExpPath() {\n        return this.pathExp;\n    }\n\n    public setRegExpPath(pathExp) {\n        this.pathExp = pathExp;\n\n        return this;\n    }\n\n    public getBound() {\n        return this.bound;\n    }\n\n    public setBound(bound) {\n        this.bound = bound;\n\n        return this;\n    }\n\n    public getContext() {\n        return this.context;\n    }\n\n    public setContext(context) {\n        this.context = context;\n\n        return this;\n    }\n\n}","import { Vessel, isEmpty, toRegExpPath  } from '@vessel/core';\nimport { Route } from '../Route';\n\nexport function route(routeName, routePath=undefined) {\n    return function(proto, name, descriptor) {\n        let route,\n            metadataManager = Vessel.$container.get('@metadata_manager'),\n            routes = metadataManager.getRawData('cached_routes');\n\n        if ( isEmpty(routes) ) routes = {};\n\n\n        route = new Route(routeName);\n\n        if (routePath) {\n            route.setPath(routePath)\n                 .setRegExpPath(toRegExpPath(routePath));\n        }\n\n        route.setBound(descriptor.value)\n             .setContext(proto);\n\n        routes[routeName] = route;\n\n        metadataManager.addRawData('cached_routes', routes);\n    }\n}","export const app = {\n\n    // Application URL\n    baseUrl: 'http://localhost:3000',\n\n    // Remote Rest API Server URL\n    remoteUrl: 'https://httpbin.org'\n\n};","import { Kernel } from '@vessel/core';\n\nexport function bootable(constructor: any) {\n    const app = new constructor();\n    new Kernel(app).boot();\n}","import { Vessel } from '@vessel/core';\n\n/**\n * Decorator: @get(moduleName)\n *\n * Uses the @metadata_manager service\n *\n *\n * @param depName\n */\nexport function get(depName) {\n    return function(proto, attrName) {\n        let metadataManager = Vessel.$container.get('@metadata_manager'),\n            className = proto.getClassName();\n\n        metadataManager.setDependency(className, {\n            attrName: attrName,\n            depName: depName\n        });\n    }\n}","import { Vessel } from '@vessel/core';\n\n/**\n * Decorator: @attr\n *\n * Adds the names of the custom model attributes to\n * the metadata manager.\n *\n * This will be used by the framework so it knows what\n * are the model attributes.\n *\n * @param proto\n * @param attrName\n */\nexport function attr(proto, attrName) {\n    let metadataManager = Vessel.$container.get('@metadata_manager'),\n        className = proto.getClassName();\n\n    metadataManager.setAttribute(className, attrName);\n}","import { Vessel } from '@vessel/core';\n\n/**\n * Decorator: @attr\n *\n * Adds the name of the identifier attribute to\n * the metadata manager.\n *\n * This will be used by the framework so it knows what\n * are the model identifier.\n *\n * @param proto\n * @param attrName\n */\nexport function identifier(proto, attrName) {\n    let metadataManager = Vessel.$container.get('@metadata_manager'),\n        className = proto.getClassName();\n\n    metadataManager.setIdentifier(className, attrName);\n}","import {isFunction} from \"@vessel/core\";\n/**\n * Decorator: @validate( <validate function> )\n *\n * Alters the original setter so each time\n * it is invoked it will proceed as follows:\n *\n *  1. Calls the built-in _validate function. This\n *  is a built-in framework function, responsible\n *  for general validation.\n *  2. The _validation function will delegate to\n *  the given validate function\n *  3. If the passed in validate function returns\n *  true it'll execute the setter.\n *  *3b. If the validate function results in false,\n *  The new value will not be setted.\n *\n * @param validationFn\n * @returns descriptor object\n */\nexport function validate(validationFn) {\n    return function(proto, setterName, descriptor) {\n        if ( !isFunction(validationFn) ) {\n            throw TypeError(\"The @validate() decorator, \" +\n                \"applied to '\" + setterName + \"()', requires a \" +\n                \"valid validator function as parameter to be \" +\n                \"passed in.\");\n        }\n\n        let boundFn = descriptor.value;\n        descriptor.value = function setAttribute(value) {\n            if ( this._validate(value, validationFn) ) {\n                return boundFn.call(this, value);\n            }\n        };\n        return descriptor;\n    }\n}","import { Controller as BaseController } from '@vessel/core';\n\nimport { route } from '@vessel/router';\nimport { get } from '@vessel/decorators';\n\nimport { TodoModel } from '../model/TodoModel';\n\nexport class TodoController extends BaseController {\n\n    @get('collection.todo')\n    public collection;\n\n    @route('todo_index', '/')\n    public indexTodo() {\n        this.unrender('view.todo');\n    }\n\n    @route('todo_edit', '/edit/:id')\n    public async editTodo(id) {\n\n        this.render('view.todo', { id: id });\n    }\n\n    @route('todo_create')\n    public createTodo() {\n    }\n\n}","import { Model as BaseModel } from '@vessel/core';\nimport { attr, identifier, validate } from '@vessel/decorators';\nimport { ModelInterface } from '@vessel/types';\n\nexport class TodoModel extends BaseModel implements ModelInterface {\n\n    @identifier\n    @attr\n    public id;\n\n    @attr\n    public author;\n\n    @attr\n    public body;\n\n    @attr\n    public date;\n\n    protected bridge = 'service.todo';\n\n\n    getId() {\n        return this.attr.id;\n    }\n\n    setId(value) {\n        this.attr.id = value;\n\n        return this\n    }\n\n\n    getAuthor() {\n        return this.attr.author;\n    }\n\n    @validate(\n        function validateAuthor(value) {\n            if (!(value.length >= 3 && value.length <= 20) ) {\n                console.warn(\"Author length must be greater \" +\n                    \"than 3 characters or less than 20.\");\n                return false;\n            }\n            return true;\n        }\n    )\n    setAuthor(value) {\n        this.attr.author = value;\n\n        return this;\n    }\n\n    getBody() {\n        return this.attr.body;\n    }\n\n    @validate(\n        function validateBody(value) {\n            if (!(value.length >= 0 && value.length <= 120) ) {\n                throw TypeError(\"Body length must be less \" +\n                    \"than 120 characters and must not be empty.\");\n            }\n            return true;\n        }\n    )\n    setBody(value) {\n        this.attr.body = value;\n\n        return this;\n    }\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { get } from '@vessel/decorators';\n\nimport { TodoModel } from '../model/TodoModel';\n\n\nexport class TodoCollection extends BaseCollection {\n\n    protected bridge = 'service.todo';\n\n    protected model = TodoModel;\n\n    @get('collection.test')\n    public testCollection;\n\n    @get('collection.fifth')\n    public fifthCollection;\n\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { get, collection } from '@vessel/decorators';\n\n\nexport class ThirdCollection extends BaseCollection {\n\n    @get('collection.fourth')\n    public fourthCollection;\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { get } from '@vessel/decorators';\n\nexport class TestCollection extends BaseCollection {\n\n    @get('collection.third')\n    public thirdCollection;\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { collection } from '@vessel/decorators';\n\n\n\nexport class FourthCollection extends BaseCollection {\n\n    public test = \"test\";\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { collection } from '@vessel/decorators';\n\nexport class FifthCollection extends BaseCollection {\n\n    public test = \"fifth\";\n\n}","import { View } from '@vessel/core';\nimport { VirtualDOM } from '@vessel/dom';\n\nexport class TodoView extends View {\n\n    public parent = '#todo-root';\n\n    public constructor() {\n        super();\n        this.onRefresh = this.onRefresh.bind(this);\n    }\n\n    public onRefresh() {\n        this.route('todo_edit', { id: ++this.state.id } );\n    }\n\n    public render() {\n        let div, p, i, button, input,\n            self = this;\n\n        div = this.create('div')\n            .set({\n                'class' : 'todo-class'\n            })\n            .css({\n                'color': 'red'\n            });\n\n        p = this.create('p')\n            .text(\"I'm the todo id \")\n            .appendTo(div);\n\n        i = this.create('i')\n            .text(this.state.id)\n            .appendTo(p);\n\n        input = this.create('input')\n            .set({\n                'id': 'input'\n            })\n            .appendTo(div);\n\n        button = this.create('button')\n            .text(\"Refresh\")\n            .click(self.onRefresh)\n            .appendTo(div);\n\n        return div;\n    }\n\n}","import { HttpBridge } from '@vessel/core';\n\nexport class TodoService extends HttpBridge {\n\n    protected endPoint = '/post';\n\n    protected getResponse(response) {\n        return JSON.parse(response);\n    }\n\n    public create(jsonResponse, model) {\n        model.setId(jsonResponse.id);\n        return model;\n    }\n\n    public read(jsonResponse, obj) {\n        return jsonResponse;\n    }\n\n    public update(jsonResponse, model) {\n        return model;\n    }\n\n    public destroy(jsonResponse) {\n        return jsonResponse.id;\n    }\n\n\n}","import { TodoController } from \"../controller/TodoController\";\n\nimport { TodoModel } from '../model/TodoModel';\n\nimport { TodoCollection } from '../collection/TodoCollection';\nimport { ThirdCollection } from \"../collection/ThirdCollection\";\nimport { TestCollection } from \"../collection/TestCollection\";\nimport { FourthCollection } from \"../collection/FourthCollection\";\nimport { FifthCollection } from \"../collection/FifthCollection\";\n\nimport { TodoView } from \"../view/TodoView\";\n\nimport { TodoService } from \"../service/TodoService\";\n\nexport const modules = {\n\n    models: {\n        'model.todo': TodoModel,\n    },\n\n    controllers: {\n        'controller.todo': TodoController\n    },\n\n    collections: {\n        'collection.todo': TodoCollection,\n        'collection.test': TestCollection,\n        'collection.third': ThirdCollection,\n        'collection.fourth': FourthCollection,\n        'collection.fifth': FifthCollection\n    },\n\n    views: {\n        'view.todo': TodoView\n    },\n\n    services: {\n        'service.todo': TodoService\n    }\n\n};","import { RouterBoot } from '@vessel/router';\nimport { VirtualDOMBoot } from '@vessel/dom';\n\nimport { app as appConfig } from './config/app';\nimport { modules } from './config/modules';\nimport { BaseApp } from '@vessel/core';\nimport { bootable } from '@vessel/decorators';\n\n@bootable\nclass App extends BaseApp {\n\n    public registerConfig() {\n        return appConfig;\n    }\n\n    public registerModules() {\n        return modules;\n    }\n\n    public registerPackages() {\n        return [\n            new RouterBoot(),\n            new VirtualDOMBoot()\n        ];\n    }\n\n    public getGlobalName() {\n        return '$App';\n    }\n\n}"],"names":["MetadataManager","Container","merge","each","getKeys","findItem","ContainerLoader","Kernel","Vessel","isSupported","tslib_1.__extends","RemoteService","isGet","isEmpty","Service","toInitialUpperCase","HttpBridge","isModel","isCollection","Bridge","defineProp","Model","isArrayEmpty","Controller","toString","isString","isEvent","formatEvent","View","Collection","filterOne","matchPair","filter","map","isArray","isObject","getCurrentUrl","removeLastSlash","toRegExpPath","isFunction","BaseController","tslib_1.__decorate","BaseModel","BaseCollection","appConfig"],"mappings":"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"}