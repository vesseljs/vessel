{"version":3,"file":"bundle.js","sources":["../node_modules/@vessel/core/src/metadata/Metadata.ts","../node_modules/@vessel/core/src/metadata/MetadataManager.ts","../node_modules/@vessel/core/src/injector/Container.ts","../node_modules/@vessel/core/src/boot/ContainerLoader.ts","../node_modules/@vessel/core/src/boot/package/AbstractPackageBoot.ts","../node_modules/@vessel/core/Kernel.ts","../node_modules/@vessel/core/src/base/BaseTypes.ts","../node_modules/@vessel/core/src/base/Vessel.ts","../node_modules/@vessel/core/src/services/Service.ts","../node_modules/@vessel/core/src/services/http/HttpMethods.ts","../node_modules/@vessel/core/src/services/RemoteService.ts","../node_modules/@vessel/core/src/services/Bridge.ts","../node_modules/@vessel/core/src/services/http/HttpBridge.ts","../node_modules/@vessel/core/src/services/storage/StorageBridge.ts","../node_modules/@vessel/core/src/base/model/Proxy.ts","../node_modules/@vessel/core/src/base/model/Model.ts","../node_modules/@vessel/core/src/base/controller/Controller.ts","../node_modules/@vessel/dom/src/vnode/VirtualNode.ts","../node_modules/@vessel/dom/src/vdom/VirtualDOM.ts","../node_modules/@vessel/dom/src/boot/VirtualDOMBoot.ts","../node_modules/@vessel/core/src/base/view/View.ts","../node_modules/@vessel/core/src/base/collection/Collection.ts","../node_modules/@vessel/core/src/boot/app/App.ts","../node_modules/@vessel/core/src/common/utils/Types.ts","../node_modules/@vessel/core/src/common/utils/RegExp.ts","../node_modules/@vessel/core/src/common/utils/MultipleKeyObject.ts","../node_modules/@vessel/core/src/common/utils/utilities.ts","../node_modules/@vessel/core/index.ts","../node_modules/@vessel/router/src/Router.ts","../node_modules/@vessel/router/src/boot/RouterBoot.ts","../node_modules/@vessel/router/src/decorators/route.ts","../src/config/app.ts","../node_modules/@vessel/decorators/src/bootable.ts","../node_modules/@vessel/decorators/src/get.ts","../node_modules/@vessel/decorators/src/attr.ts","../node_modules/@vessel/decorators/src/identifier.ts","../node_modules/@vessel/decorators/src/collection.ts","../node_modules/@vessel/decorators/src/validate.ts","../src/model/TodoModel.ts","../src/controller/TodoController.ts","../src/collection/TodoCollection.ts","../src/collection/ThirdCollection.ts","../src/collection/TestCollection.ts","../src/collection/FourthCollection.ts","../src/collection/FifthCollection.ts","../src/view/TodoView.ts","../src/service/TodoService.ts","../src/config/modules.ts","../src/main.ts"],"sourcesContent":["export class Metadata {\n\n    public static MODEL_ATTRIBUTES_KEY = 'attributes';\n\n    public static MODEL_IDENTIFIER_KEY = 'identifier';\n\n    public static COLLECTION_ATTRIBUTE_KEY = 'collection';\n\n    public static DEPENDENCIES_KEY = 'dependencies';\n\n}","import { Metadata } from '@vessel/core';\n\n/**\n * class MetadataManager.\n *\n * Provides a way to store/retrieve\n * metadata info. about classes or\n * raw data needed to the packages\n * to work.\n *\n * This class manages the data\n * so it can be set by decorators\n * which are executed at runtime\n * and retrieved later by the\n * instantiated classes. If your\n * package doesn't use decorators\n * your package may not need the\n * MetadataManager.\n *\n * Metadata e.g. Which attributes are\n * being used by the model, what is\n * the name of the attribute in the\n * collection which is the model array\n * or what are the dependencies of a\n * class.\n *\n * Raw Data e.g. Object with paths\n * and routes.\n *\n */\nexport class MetadataManager {\n\n    /**\n     * Metadata container\n     * for the loaded classes.\n     */\n    private cache = {};\n\n    /**\n     * Container for\n     * raw data\n     */\n    private raw = {};\n\n    /**\n     * Setter/getters for\n     * built-in decorators.\n     */\n\n    public getDependencies(className) {\n        return this.retrieve(className, Metadata.DEPENDENCIES_KEY);\n    }\n\n    public setDependency(className, dep) {\n        this.createOrPush(className, Metadata.DEPENDENCIES_KEY, dep);\n        return this;\n    }\n\n    public getAttributes(className) {\n        return this.retrieve(className, Metadata.MODEL_ATTRIBUTES_KEY);\n    }\n\n    public setAttribute(className, attrName) {\n        this.createOrPush(className, Metadata.MODEL_ATTRIBUTES_KEY, attrName);\n        return this;\n    }\n\n    public getCollection(className) {\n        return this.retrieve(className, Metadata.COLLECTION_ATTRIBUTE_KEY);\n    }\n\n    public setCollection(className, attrName) {\n        this.loadClass(className)[Metadata.COLLECTION_ATTRIBUTE_KEY] = attrName;\n        return this;\n    }\n\n    public getIdentifier(className) {\n        return this.retrieve(className, Metadata.MODEL_IDENTIFIER_KEY);\n    }\n\n    public setIdentifier(className, attrName) {\n        this.loadClass(className)[Metadata.MODEL_IDENTIFIER_KEY] = attrName;\n        return this;\n    }\n\n    /**\n     * Setter for add any kind of metadata,\n     * so any dev can use decorators\n     * which need metadata without\n     * re-coding the core\n     */\n    public addMetadata(className, key, value) {\n        this.loadClass(className)[key] = value;\n        return this;\n    }\n\n    /**\n     * Getter for the setter right above.\n     */\n    public getMetadata(className, key) {\n        return this.retrieve(className, key);\n    }\n\n    /**\n     * Some packages need to store\n     * raw data not associated to any\n     * className.\n     */\n    public addRawData(key, value) {\n        this.raw[key] = value;\n        return this;\n    }\n\n    /**\n     * Getter for raw data.\n     */\n    public getRawData(key) {\n        return this.raw[key];\n    }\n\n    /**\n     * Checks if a given\n     * className is\n     * cached.\n     */\n    private has(className) {\n        return this.cache.hasOwnProperty(className);\n    }\n\n    /**\n     * Returns the class if it\n     * exists or creates and returns\n     * it if it doesn't.\n     */\n    private loadClass(className) {\n        if (!this.has(className)) {\n            this.cache[className] = {}\n        }\n        return this.cache[className];\n    }\n\n    /**\n     * Retrieves the information\n     * of metadata if it was\n     * set before.\n     */\n    private retrieve(className, key) {\n        if (!this.has(className)) {\n            return undefined;\n        }\n\n        return this.cache[className][key];\n    }\n\n    private createOrPush(className, key, value) {\n        let cached = this.loadClass(className);\n\n        if (!cached.hasOwnProperty(key)) {\n            cached[key] = [];\n        }\n\n        cached[key].push(value);\n        return value;\n    }\n\n}","import { getKeys, each, findItem, merge } from '@vessel/core';\n\n/**\n *\n * Limitations:\n *\n * - You can't use a injected property by\n * @get decorator within constructor or a method\n * called immediately within the constructor. But you\n * can always use this.get() or this.container.get()\n * within constructor. That is, because @get decorator\n * adds the dependencies but it doesn't inject them,\n * the dependencies are resolved when the module is\n * started from the container with a .get() or when\n * the module is a dependency of a module which is being\n * started with the container method .get(). That said,\n * using the container method .get() returns the dependency\n * immediately.\n */\nexport class Container {\n\n    private modules = {};\n\n    private cache = new WeakMap();\n\n    public register(opts) {\n        merge(this.modules, opts);\n        return this;\n    }\n\n    public registerSingleModule(name, module)Â {\n\n        if (!module) {\n            throw TypeError(\"Cannot registerSingleModule(), 'module' was \" + module);\n        }\n\n        let modules = this.modules;\n\n        if (!modules.hasOwnProperty(\"@\")) {\n            modules[\"@\"] = {}\n        }\n\n        if (modules[\"@\"].hasOwnProperty(name)) {\n            throw TypeError(\"Cannot registerSingleModule(), '\" + name + \"' is already registered\");\n        }\n\n        modules[\"@\"][name] = module;\n\n        return this.loadModule(module);\n    }\n\n    /**\n     * Gets a given module name.\n     */\n    public get(name) {\n        return this.resolveDependencies(name);\n    }\n\n    /**\n     * Loads a module by its constructor,\n     * if it's already instantiated it will\n     * return the instance, otherwise it will\n     * instantiate and then return it.\n     *\n     * It can be used to get an instance directly\n     * without its name but it will not resolve\n     * its @get() dependencies.\n     */\n    public loadModule(constructor) {\n        let cache = this.cache;\n\n        if (!cache.has(constructor))\n            cache.set(constructor, new constructor());\n\n        return cache.get(constructor);\n    }\n\n    /**\n     * Gets the dependencies of a given className.\n     *\n     * At this time, metadataManager cannot be loaded by\n     * container.get(). That is, because the container.get()\n     * of the injector needs the MetadataManager to get the\n     * dependencies, so we manually load the dependency\n     * @metadata_manager (which is already registered\n     * within ContainerLoader) avoiding an unkind infinite loop :)\n     */\n    private getDependencies(className) {\n        let metadataConstructor = this.modules['@']['@metadata_manager'],\n            metadataManager = this.loadModule(metadataConstructor);\n        return metadataManager.getDependencies(className);\n    }\n\n    /**\n     * Resolves dependencies for a given module, recursively\n     * injecting its dependencies.\n     */\n    private resolveDependencies(name) {\n        let constructor = this.findModuleByName(name);\n\n        if (!constructor) {\n            throw new TypeError(\"Attempt to get \" +\n                \"non-existent module: '\" +\n                name +\"'. Did you register it?\");\n        }\n\n        let dependencies = this.getDependencies(constructor.name),\n            topParent = {\n                name: name,\n                constructor: constructor\n            };\n\n        each(dependencies, function(item){\n            this.inject(item.depName, item.attrName, topParent);\n        }, this);\n\n        return this.loadModule(constructor);\n    }\n\n    /**\n     * The purpose of this function is to\n     * get a @get('registrated_module_name') injected.\n     *\n     * All children dependencies are recursively resolved.\n     *\n     * The top parent of each container.inject() is\n     * the very first dependency.\n     *\n     * e.g. For a @get('module.name') the very first\n     * dependency is 'module.name', which will be injected\n     * to an instantiated constructor passed in as the\n     * 'constructor' parameter.\n     *\n     * @param depName is the current dependency name.\n     * @param attrName is the current attribute name to be injected on.\n     * @param topParent is an object with the name and constructor of\n     * the topParent dependency (not the module where we are injecting).\n     * @param parents is an array with the dependencies for a single @get().\n     * @param constructor is where the first dep will be injected.\n     *\n     */\n    private inject(depName, attrName, topParent, parents=[], constructor=null) {\n        let depConstructor = this.findModuleByName(depName);\n\n        if (!depConstructor) {\n            throw new TypeError(\"Injection error on '\"+topParent.name+\n                \"': Attempt to inject non-existent dependency: '\"\n                + depName + \"'. Did you register it?\");\n        }\n\n        if (this.isCircular(depName, parents, topParent.name)) {\n            throw new RangeError(\"Circular dependency detected: \"+\n                \"module injection was impossible. Attempting to \"+\n                \"inject '\" + depName + \"' which have tried to \"+\n                \"resolve a parent dependency.\");\n        }\n\n        let depDependencies = this.getDependencies(depConstructor.name);\n\n        parents.push(depName);\n\n        each(depDependencies, function(dep) {\n            this.inject(dep.depName, dep.attrName, topParent, parents, depConstructor);\n        }, this);\n\n        // Only the top-parent dependency enters here.\n\n        if (parents.length === 1) {\n            // Inject the very first parent dependency\n            // to the module prototype.\n            let topParentInstance = this.loadModule(topParent.constructor),\n                topDependencyInstance = this.loadModule(depConstructor);\n            return topParentInstance[attrName] = topDependencyInstance;\n        }\n\n        // Children dependencies enter here.\n\n        parents.pop();\n        // Inject the dependency to the parent prototype.\n            let topDepInstance = this.loadModule(constructor),\n                depInstance = this.loadModule(depConstructor);\n        return topDepInstance[attrName] = depInstance;\n    }\n\n    /**\n     * Find a module by its name, when a\n     * match is found, the loop stops.\n     *\n     * Returns the constructor if a module\n     * is found.\n     */\n    private findModuleByName(queryName) {\n        let modules = this.modules,\n            keys = getKeys(modules),\n            len = keys.length;\n        for (let i = 0; i < len; i++) {\n            let moduleType = keys[i],\n                module = modules[moduleType];\n            if (module && module.hasOwnProperty(queryName))\n                return modules[moduleType][queryName];\n        }\n        return null;\n    }\n\n    private isCircular(depName, parents, topParentName) {\n        return depName === topParentName || findItem(parents, depName);\n    }\n}","import { MetadataManager } from '@vessel/core';\nimport { Container } from '@vessel/core';\n\n/**\n * Loads the injector Container\n * and registers the MetadataManager\n * so the injector is ready to use.\n *\n * It is needed to use decorators which\n * use metadata and to inject dependencies.\n */\nexport class ContainerLoader {\n\n    public constructor() {\n        this.boot();\n    }\n\n    public boot() {\n        return this.registerTo(new Container());\n    }\n\n    private registerTo(container) {\n        container.registerSingleModule('@metadata_manager', MetadataManager);\n        return container;\n    }\n\n}","import { BaseApp } from '../app/App';\nimport { Container }  from '@vessel/core';\n\nexport abstract class AbstractPackageBoot {\n    protected abstract VERSION: string;\n    abstract setup(namespace: BaseApp, container: Container);\n    abstract register(container: Container);\n}","import {Vessel, each } from '@vessel/core';\n\n/**\n * Heart of Vessel.\n *\n * Manages the packages, services,\n * injector and configuration.\n */\nexport class Kernel {\n\n    private VERSION = '0.0.1-DEV';\n\n    private app;\n\n    public constructor(app) {\n        this.app = app;\n    }\n\n    public boot() {\n        this.setGlobals()\n            .init();\n    }\n\n    public setGlobals() {\n        window[this.app.getGlobalName()] = this.app;\n        return this;\n    }\n\n    get container() {\n        return Vessel.$container;\n    }\n\n    private setAppContainer(container) {\n        this.app.container = container;\n        return this;\n    }\n\n    private registerDependencies(container) {\n        let registrations = this.app.registerModules();\n        container.register(registrations);\n        return this;\n    }\n\n    private bootPackages() {\n        let bootPackages = this.app.registerPackages();\n        return this.loadPackages([bootPackages]);\n    }\n\n    private loadPackages(arr) {\n        let namespace = this.app,\n            container = namespace.container;\n        each(arr, function(pkgs) {\n           each(pkgs, function(pkg){\n               pkg.register(container);\n               pkg.setup(namespace, container);\n           });\n        });\n        return this;\n    }\n\n    private registerAppConfig() {\n        let config = this.app.registerConfig();\n        return this.container.get('@metadata_manager')\n                   .addRawData('app_config', config);\n    }\n\n    private init() {\n\n        let container = this.container;\n\n        if (!container) {\n            throw new Error(\"Cannot register dependencies without \" +\n                \"the injector package.\");\n        }\n\n        this.registerDependencies(container)\n            .setAppContainer(container)\n            .bootPackages()\n            .registerAppConfig();\n\n        return this;\n    }\n\n}","export class BaseTypes {\n\n    public static VESSEL = 'vessel';\n\n    public static MODEL = 'model';\n\n    public static CONTROLLER = 'controller';\n\n    public static COLLECTION = 'collection';\n\n    public static VIEW = 'view';\n\n    public static SERVICE = 'service';\n\n    public static REMOTE_SERVICE = 'remote_service';\n\n    public static BRIDGE = 'bridge';\n\n    public static HTTP_BRIDGE = 'http_bridge';\n\n    public static STORAGE_BRIDGE = 'storage_bridge';\n\n}","import {ContainerLoader, Container, BaseTypes} from \"@vessel/core\";\n\n/**\n * Vessel's Main class.\n *\n * Base classes will inherit\n * this class.\n */\nexport class Vessel {\n\n    protected _type = BaseTypes.VESSEL;\n\n    /**\n     * Container\n     *\n     * Vessel.$container is accessible\n     * by decorators executed at runtime\n     *\n     */\n    public static $container: Container = new ContainerLoader().boot();\n\n    /**\n     * Container: Alias\n     *\n     * Alias so the instances of Views,\n     * Collections, Services, etc. can\n     * access container with this.container\n     *\n     */\n    get container(): Container {\n        return Vessel.$container;\n    }\n\n    protected getClassName(): string {\n        return this.constructor.name;\n    }\n\n    protected getType() {\n        return this._type;\n    }\n\n    protected get(module: string): any {\n        return this.container.get(module);\n    }\n\n\n}","import { BaseTypes, Vessel } from '@vessel/core';\n\nexport class Service extends Vessel {\n\n    protected _type = BaseTypes.SERVICE;\n\n}","export class HttpMethods {\n\n    public static GET = 'GET';\n\n}","import { Service } from './Service';\nimport { BaseTypes } from '@vessel/core';\nimport { HttpMethods } from  './http/HttpMethods';\n\nexport class RemoteService extends Service {\n\n    protected _type = BaseTypes.REMOTE_SERVICE;\n\n    protected getBaseUrl(): string {\n        let appConfig = this.get('@metadata_manager')\n            .getRawData('app_config');\n        return appConfig.baseUrl;\n    }\n\n    protected newAjaxRequest(url, method) {\n        return new Promise( (resolve, reject) => {\n            let request = new XMLHttpRequest();\n\n            request.onload = function() {\n                if (request.status === 200) {\n                    resolve(request.response);\n                } else {\n                    reject(request.statusText);\n                }\n            };\n\n            request.onerror = function() {\n                reject(\"Network error.\")\n            };\n\n            request.open(method, url);\n            request.send();\n\n        });\n    }\n\n    protected getRequest(url: string) {\n        return this.newAjaxRequest(url, HttpMethods.GET);\n    }\n\n    protected postRequest(url: string) {\n\n    }\n\n    protected putRequest(url: string) {\n\n    }\n\n    protected removeRequest(url: string) {\n\n    }\n}","import { RemoteService } from './RemoteService';\nimport { BaseTypes, Types } from '@vessel/core';\n\n\nexport abstract class Bridge extends RemoteService {\n\n    protected _type = BaseTypes.BRIDGE;\n\n}","import { Bridge } from '../Bridge';\nimport { BaseTypes, Types } from '@vessel/core';\n\nexport abstract class HttpBridge extends Bridge {\n\n    protected abstract endPoint: string;\n\n    protected _type = BaseTypes.HTTP_BRIDGE;\n\n\n    protected abstract getResponse(response);\n\n    public abstract create(response, model);\n\n    public abstract read(response, obj);\n\n    public abstract update(response, model);\n\n    public abstract destroy(response);\n\n\n    public createRequest(obj) {\n        return this.bridgeRequest(obj, this.postRequest, this.create);\n    }\n\n    public readRequest(obj) {\n        return this.bridgeRequest(obj, this.getRequest, this.read);\n    }\n\n    public updateRequest(obj) {\n        return this.bridgeRequest(obj, this.putRequest, this.update);\n    }\n\n    public destroyRequest(obj) {\n        return this.bridgeRequest(obj, this.removeRequest, this.destroy);\n    }\n\n\n    protected getPartialUrl() {\n        return this.getBaseUrl() + this.endPoint;\n    }\n\n    protected getObjUrl(obj) {\n        if ( obj.getType() === BaseTypes.MODEL ) {\n            return this.getPartialUrl() + '/' + this.extractIdentifier(obj);\n        } else if ( obj.getType() === BaseTypes.COLLECTION ) {\n            return this.getPartialUrl();\n        } else {\n            throw new TypeError('Bridges can only be used with Model and ' +\n                'Collection classes');\n        }\n    }\n\n    protected getUrl(): void | string {\n        return void 0;\n    }\n\n\n    private getFullUrl(obj): string {\n        let customUrl = this.getUrl();\n        return customUrl ? customUrl : this.getObjUrl(obj);\n    }\n\n    private extractIdentifier(obj) {\n        let id = obj.getIdentifier();\n\n        if ( !this.isValidIdentifier(id) ) {\n            throw new TypeError('Bridge: Invalid identifier ' +\n                id + ' (' + typeof id + ').');\n        }\n\n        return id;\n    }\n\n    private isValidIdentifier(exp) {\n        return typeof exp === Types.STRING ||\n               typeof exp ===  Types.NUMBER;\n    }\n\n    private bridgeRequest(obj, requestCb, processCb) {\n        let self = this,\n            url = this.getFullUrl(obj),\n            processedData,\n            request,\n            data;\n\n        return new Promise((resolve, reject) => {\n\n            request = requestCb.call(self, url);\n\n            request.then(\n                function onSuccess(response) {\n                    data = self.getResponse(response);\n                    processedData = processCb.call(self, data, obj);\n                    resolve(processedData);\n                },\n\n                function onError(response) {\n                    reject(response);\n                }\n            );\n        });\n    }\n\n}","import { Bridge } from '../Bridge';\nimport { BaseTypes } from '@vessel/core';\n\nexport abstract class StorageBridge extends Bridge {\n\n    protected _type = BaseTypes.STORAGE_BRIDGE;\n\n    public abstract fetch();\n\n    public abstract save();\n\t\n}","import { defineProp } from '@vessel/core';\n\n/**\n * Attribute proxy.\n *\n * Intercepts each setter/getter of\n * each model's attribute so it can\n * trigger events.\n */\nexport class AttribProxy {\n\n    /**\n     * Stores the state of the\n     * model's attributes.\n     *\n     * @type {any{} }\n     */\n    public data = <any>{};\n\n    /**\n     * Setups a new attribute, installs\n     * the getter and setter interceptors.\n     *\n     * @param name\n     */\n    public addAttribute( name: string ) {\n        this.data[name] = \"\";\n        defineProp(this, name,\n            function getter() {\n                return this.data[name];\n            },\n            function setter( value ) {\n                this.data[name] = value;\n            }\n        )\n    }\n\n}","import { AttribProxy } from './Proxy';\nimport { Vessel, isArrayEmpty, each, toInitialUpperCase, BaseTypes } from '@vessel/core';\nimport { ModelInterface } from '@vessel/types/definitions';\n\n/**\n * BaseModel class\n */\nexport class Model extends Vessel implements ModelInterface {\n\n    protected _type = BaseTypes.MODEL;\n\n    /**\n     * Stores the bridge service.\n     */\n    protected bridge: string;\n\n    /**\n     * Stores the attribute proxy.\n     */\n    protected attr: any;\n\n\n    public constructor() {\n        super();\n        this._createProxy();\n    }\n\n    /**\n     * Provides a way to set multiple\n     * attributes at once.\n     *\n     * @param attrs\n     */\n    public set( attrs ) {\n        each(attrs, function(attrName, value){\n            let boundFn = this['set' + toInitialUpperCase(attrName)];\n            boundFn.call(this, value);\n        }, this);\n        return this;\n    }\n\n    public save() {\n        let bridge = this.getBridge();\n        if (this.isNew()) {\n            return bridge.createRequest(this);\n        }\n        return bridge.updateRequest(this);\n    }\n\n    public fetch() {\n        return this.getBridge().readRequest(this);\n    }\n\n    public remove() {\n        return this.getBridge().destroyRequest(this);\n    }\n\n    public getIdentifier() {\n        let attrName = this\n            .get('@metadata_manager')\n            .getIdentifier(this.getClassName());\n        return this.attr[attrName];\n    }\n\n    protected isNew() {\n        return !this.getIdentifier();\n    }\n\n    /**\n     * Instances the attribute proxy, it adds each\n     * attribute defined in the model with the\n     * 'attr' decorator to the proxy.\n     * @private\n     */\n    protected _createProxy() {\n        let attrs,\n            metadataManager = this.get('@metadata_manager');\n\n        attrs = metadataManager.getAttributes(this.getClassName());\n\n        if ( isArrayEmpty(attrs) ) {\n            throw TypeError(\"Attempt to create a proxy\" +\n                \" with no metadata.\");\n        }\n\n        this.attr = new AttribProxy();\n\n        each(attrs, function(attrName) {\n            this.attr.addAttribute(attrName);\n        }, this);\n    }\n\n    /**\n     * Whenever a validation takes place, this\n     * function will be invoked. All built-in\n     * general validations will be checked here.\n     *\n     * This function is responsible for return\n     * the results of the custom defined\n     * validationFn.\n     *\n     * @param value\n     * @param validationFn\n     * @returns boolean\n     * @private\n     */\n    protected _validate( value, validationFn ) {\n        return validationFn(value);\n    }\n\n    protected getBridge() {\n        let bridge = this.bridge;\n\n        if (!bridge) {\n            throw new TypeError(\"Bridge does not exist. Define a bridge \" +\n                \"for \" + this.getClassName());\n        }\n        return this.get(bridge);\n    }\n\n}","import { Vessel, BaseTypes } from '@vessel/core';\n\nexport class Controller extends Vessel {\n\n    protected _type = BaseTypes.CONTROLLER;\n\n    protected render(viewName, renderData) {\n      return this.get('@vdom').render(viewName, renderData);\n    }\n\n    protected renderRoute(routeName, ...args) {\n        return this.get('@router').renderRoute(routeName, ...args);\n    }\n\n\n}","import {toString, merge, each, Vessel} from '@vessel/core';\n\nexport class VirtualNode {\n\n    public type;\n\n    public children = [];\n\n    public attributes = {};\n\n    private element = null;\n\n    public constructor(type) {\n        this.type = type;\n    }\n\n    public setEl(elem: HTMLElement) {\n        this.element = elem;\n        return this;\n    }\n\n    public el() {\n        return this.element;\n    }\n\n    public set(props) {\n        merge(this.attributes, props);\n        return this;\n    }\n\n    public text(str: string) {\n        let children = this.children;\n        if (children.length === 0) children.push(toString(str));\n        return this;\n    }\n\n    public appendTo($parent) {\n        $parent.children.push(this);\n        return this;\n    }\n\n    public append($child) {\n        this.children.push($child);\n        return this;\n    }\n\n    public css(attrs) {\n        let style = '';\n        each(attrs, function(attr, value){\n           style += attr + \":\" + value + \";\";\n        });\n        return this.set({\n            'style': style\n        });\n    }\n    \n    public link(url) {\n        return this.set({\n            href: url\n        });\n    }\n\n    public event(name, fn) {\n        this.attributes[name] = fn;\n        return this;\n    }\n\n    public click(fn) {\n        return this.set({\n            'onclick': fn\n        })\n    }\n\n    public dblClick(fn) {\n        return this.set({\n            'ondblclick': fn\n        })\n    }\n\n    public change(fn) {\n        return this.set({\n            'onchange': fn\n        })\n    }\n\n    public mouseOver(fn) {\n        return this.set({\n            'onmouseover': fn\n        })\n    }\n\n    public mouseMove(fn) {\n        return this.set({\n            'onmousemove': fn\n        })\n    }\n\n    public mouseOut(fn) {\n        return this.set({\n            'onmouseout': fn\n        })\n    }\n\n    public mouseEnter(fn) {\n        return this.set({\n            'onmouseenter': fn\n        })\n    }\n\n    public mouseLeave(fn) {\n        return this.set({\n            'onmouseleave': fn\n        })\n    }\n\n    public mouseUp(fn) {\n        return this.set({\n            'onmouseup': fn\n        })\n    }\n\n    public keyDown(fn) {\n        return this.set({\n            'onkeydown': fn\n        })\n    }\n\n    public keyUp(fn) {\n        return this.set({\n            'onkeyup': fn\n        })\n    }\n\n    public keyPress(fn) {\n        return this.set({\n            'onkeypress': fn\n        })\n    }\n\n    public resize(fn) {\n        return this.set({\n            'onresize': fn\n        })\n    }\n\n    public focus(fn) {\n        return this.set({\n            'onfocus': fn\n        })\n    }\n\n    public focusIn(fn) {\n        return this.set({\n            'onfocusin': fn\n        })\n    }\n\n    public focusOut(fn) {\n        return this.set({\n            'onfocusout': fn\n        })\n    }\n\n    public select(fn) {\n        return this.set({\n            'onselect': fn\n        })\n    }\n\n    public model() {\n\n    }\n\n}","import {Vessel, Types, isString, each, isEvent, formatEvent} from '@vessel/core';\nimport { VirtualNode } from '../vnode/VirtualNode';\n\n\nexport class VirtualDOM {\n\n    public static create(type): VirtualNode {\n        return new VirtualNode(type);\n    }\n\n    public render(viewName: string, renderData: any) {\n        let $new, $old, parent,\n            view = Vessel.$container.get(viewName);\n\n        view.setState(renderData);\n\n        $new = view.render();\n        $old = view.getLastNode();\n        parent = document.querySelector(view.getParent());\n\n        return view.setLastNode( this.updateNode(parent, $new, $old) );\n    }\n\n\n    public updateNode(parent, $newNode, $oldNode=undefined, childIndex = 0) {\n        if (!$newNode) {\n            this.removeChild(parent, childIndex);\n        } else if (!$oldNode) {\n            this.appendChild(parent, $newNode);\n        } else if (this.hasChanged($newNode, $oldNode)) {\n            this.replaceChild(parent, $newNode, childIndex);\n        } else if ($newNode.type) {\n            let nextParent = parent.childNodes[childIndex],\n                newChildrenLen = $newNode.children.length,\n                oldChildrenLen = $oldNode.children.length,\n                newAttr = $newNode.attributes,\n                oldAttr = $oldNode.attributes;\n\n            for (let attrName in newAttr || oldAttr) {\n                this.updateAttribute(\n                    nextParent,\n                    attrName,\n                    newAttr[attrName],\n                    oldAttr[attrName]\n                );\n            }\n\n            for (let currentChild = 0; currentChild < newChildrenLen || currentChild < oldChildrenLen; currentChild++) {\n                let $new = $newNode.children[currentChild],\n                    $old = $oldNode.children[currentChild];\n                this.updateNode(nextParent, $new, $old, currentChild);\n            }\n        }\n        return $newNode;\n    }\n\n    private updateAttribute(elem, attrName, newValue, oldValue) {\n        if (!newValue) {\n            this.removeAttribute(elem, attrName, oldValue)\n        } else if (!oldValue || oldValue !== newValue) {\n            this.setAttribute(elem, attrName, newValue);\n        }\n    }\n\n    private createRealElement($node: any ): any {\n\n        if (isString($node)) {\n            return document.createTextNode($node);\n        }\n\n        let $child,\n            elem = document.createElement($node.type),\n            children = $node.children;\n\n        this.setAttributes(elem, $node.attributes);\n\n        if (children) {\n            for (let i = 0, len = children.length; i < len; i++) {\n                $child = children[i];\n                elem.appendChild(this.createRealElement($child));\n            }\n        }\n\n        $node.setEl(elem);\n\n        return elem;\n\n    }\n\n    private hasChanged($node1, $node2): boolean {\n        return typeof $node1 !== typeof $node2 ||\n            typeof $node1 === Types.STRING && $node1 !== $node2 ||\n            $node1.type != $node2.type;\n    }\n\n    private setAttribute(elem, name, value) {\n        elem.setAttribute(name, value);\n    }\n\n    private removeAttribute(elem, name, value) {\n        elem.removeAttribute(name, value);\n    }\n\n    private setAttributes(elem, attributes) {\n        each(attributes, function(name, value){\n            if (isEvent(name)) {\n                this.addEvent(elem, name, value);\n            } else {\n                this.setAttribute(elem, name, value);\n            }\n        }, this);\n    }\n\n    private addEvent(elem, eventName, boundFn) {\n        return elem.addEventListener(formatEvent(eventName), boundFn);\n    }\n\n    private removeChild(parent, index) {\n        parent.removeChild(parent.childNodes[index]);\n    }\n\n    private appendChild(parent, $newNode) {\n        parent.appendChild(this.createRealElement($newNode));\n    }\n\n    private replaceChild(parent, $newNode, index) {\n        parent.replaceChild(this.createRealElement($newNode), parent.childNodes[index]);\n    }\n}\n","import { VirtualDOM } from '../vdom/VirtualDOM';\nimport { AbstractPackageBoot } from '@vessel/core';\n\nexport class VirtualDOMBoot extends AbstractPackageBoot {\n\n    protected VERSION = '1.0.0-DEV';\n\n    public register(container) {\n        container.registerSingleModule('@vdom', VirtualDOM);\n    }\n\n    public setup(namespace, container) {\n        namespace.router = container.get('@vdom');\n    }\n\n}\n\n\n","import { Vessel, merge, BaseTypes } from '@vessel/core';\n\nimport { VirtualNode, VirtualDOM } from '@vessel/dom';\n\n\nexport abstract class View extends Vessel {\n\n    protected _type = BaseTypes.VIEW;\n\n    protected state: any = {};\n\n    private $lastNode: VirtualNode;\n\n    protected setState(state) {\n        merge(this.state, state);\n        return this;\n    }\n\n    public getLastNode(): VirtualNode {\n        return this.$lastNode;\n    }\n\n    public setLastNode($node: VirtualNode): View {\n        this.$lastNode = $node;\n\n        return this;\n    }\n\n    public getParent(): string {\n        return this.parent;\n    }\n\n    protected renderRoute(routeName, ...args) {\n        return this.get('@router').renderRoute(routeName, ...args);\n    }\n\n    protected create(nodeType: string): VirtualNode {\n        return VirtualDOM.create(nodeType);\n    }\n\n    abstract parent: string;\n    abstract render(...args: any[]): VirtualNode;\n\n}\n","import { Vessel, isArray, filterOne, filter, matchPair, map, BaseTypes } from '@vessel/core';\nimport { ModelInterface } from '@vessel/types/definitions';\n\ndeclare var __generator;\n\nlet prefixAttr = 'attr';\n\nexport abstract class Collection extends Vessel {\n\n    protected _type = BaseTypes.COLLECTION;\n\n    public collection: ModelInterface[];\n\n    public model;\n\n    /**\n     * Stores the bridge service.\n     */\n    protected bridge: string;\n\n    public add(...args) {\n        let collection = this.getCollection(),\n            Model = this.model;\n        try {\n            collection.push(new Model(...args));\n        } catch(e) {\n            if (e instanceof TypeError) {\n                if ( !isArray(collection) ) {\n                    console.error(\"TypeError: The collection '\" +\n                        collection+ \"' (\" + typeof collection +\n                        \") must be an array.\");\n                }\n            }\n        }\n    }\n\n    public create() {\n\n    }\n\n    public fetch() {\n        return this.getBridge().readRequest(this);\n    }\n\n    public find(attrs) {\n        return filterOne(this.getCollection(), function(item){\n            return matchPair(item[prefixAttr], attrs);\n        });\n    }\n\n    public findAll(attrs) {\n        return filter(this.getCollection(), function(item){\n            return matchPair(item[prefixAttr], attrs);\n        });\n    }\n\n    public pull(attrName) {\n        return map(this.getCollection(), function(item){\n            return item[prefixAttr][attrName];\n        });\n    }\n\n    public sort() {\n\n    }\n\n    public remove() {\n\n    }\n\n    public removeById() {\n\n    }\n\n    protected willRetrieve() {\n        return this;\n    }\n\n    protected getCollection() {\n        let name,\n            metadataManager = this.get('@metadata_manager');\n\n         name = metadataManager.getCollection(this.getClassName());\n\n        return this[name];\n    }\n\n    protected getBridge() {\n        let bridge = this.bridge;\n\n        if (!bridge) {\n            throw new TypeError(\"Bridge does not exist. Define a bridge \" +\n                \"for \" + this.getClassName());\n        }\n        return this.get(bridge);\n    }\n\n}","import { isSupported } from '@vessel/core';\nimport { AppInterface } from '@vessel/types/definitions';\n\nexport abstract class BaseApp implements AppInterface {\n\n\tpublic can;\n\n\tpublic constructor() {\n\t\tthis.browserBoot();\n\t}\n\n\tpublic browserBoot(): AppInterface {\n\t\tthis.detectBrowserFeatures();\n\t\treturn this;\n\t}\n\n\tprivate detectBrowserFeatures(): AppInterface {\n\t\tthis.can = {\n\t\t\tWeakMap: isSupported( (<any>window).WeakMap )\n\t\t};\n\t\treturn this;\n\t}\n\n\tpublic abstract getGlobalName();\n\tpublic abstract registerModules();\n\tpublic abstract registerPackages();\n\n}\n","export class Types {\n\n    public static STRING = 'string';\n\n    public static OBJECT = 'object';\n\n    public static FUNCTION = 'function';\n\n    public static NUMBER = 'number';\n}","export class RegExp {\n\n    public static EVENT_EXP = /^on/;\n\n}","import { defineProp } from '@vessel/core';\n/**\n * MultipleKeyObject\n *\n * Provides a way to set\n * values with multiple keys.\n *\n */\nexport class MultipleKeyObject {\n\n    private container = {};\n\n    public set(keyGroup, value) {\n        let masterKey = keyGroup[0];\n        for (let i = 0, len = keyGroup.length; i < len; i++) {\n            let key = keyGroup[i];\n            if (this.has(key)) {\n                return this.container[key] = value;\n            }\n\n            if (key) {\n                defineProp(this.container, key,\n                function getter() {\n                    return this[\"$\"+masterKey];\n                }, function setter(v) {\n                    return this[\"$\"+masterKey] = v;\n                });\n            }\n        }\n        return this.container[masterKey] = value;\n    }\n\n    public has(key) {\n        return this.container.hasOwnProperty(key);\n    }\n\n    public get(key) {\n        return this.container[key];\n    }\n\n}","import { Types } from './Types';\n\nimport { RegExp } from './RegExp';\n\nexport function getDate() {\n\tconsole.log('Get date!');\n}\n\nexport function checkDate() {\n\tconsole.log('checkDate!');\n}\n\nexport function isSupported(feature) {\n\treturn typeof feature == Types.FUNCTION;\n}\n\nexport function isArray(arr) {\n    return Array.isArray(arr);\n}\n\nexport function isArrayEmpty(arr) {\n    if (!arr) return true;\n    if (arr.length === 0) return true;\n    return false;\n}\n\nexport function isEvent(exp) {\n    return RegExp.EVENT_EXP.test(exp);\n}\n\nexport function isFunction(fn) {\n    if ( fn == undefined ) return false;\n    if ( typeof fn !== Types.FUNCTION ) return false;\n    return true;\n}\n\nexport function isString(exp: any) {\n    return typeof exp === Types.STRING;\n}\n\nexport function isObject(exp: any) {\n    return typeof exp === Types.OBJECT;\n}\n\n\nexport function each(obj, fn, context=null) {\n    var i, len, keys, item, result;\n    if (!obj) return;\n    if (isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n            result = fn.call(context, obj[i], i, obj);\n        }\n    } else {\n        keys = getKeys(obj);\n        for (i = 0, len = keys.length; i < len; i++) {\n            item = keys[i];\n            result = fn.call(context, item, obj[item], obj);\n        }\n    }\n    return result;\n}\n\nexport function matchPair(obj, attrs) {\n    var keys = getKeys(attrs),\n        len = keys.length,\n        key, i;\n    for (i = 0; i < len; i++) {\n        key = keys[i];\n        if (attrs[key] !== obj[key] || !(key in obj))\n            return false;\n    }\n    return true;\n}\n\nexport function map(arr, fn, context=null) {\n    let newArr = [], result;\n    each(arr, function(item, index) {\n        result = fn.call(context, item, index);\n        if ( result ) newArr.push(result);\n    });\n    return newArr;\n}\n\nexport function filter(obj, fn, context=null) {\n    let matches = [];\n    each(obj, function(item, index) {\n        if (fn.call(context, item, index, obj))\n            matches.push(item);\n    });\n    return matches;\n}\n\nexport function filterOne(arr, fn, context=null) {\n    let i, item, len = arr.length;\n    for (i = 0; i < len; i++) {\n        if (fn.call(context, item = arr[i], i, arr))\n            return item;\n    }\n    return false;\n}\n\nexport function merge(obj, obj2) {\n    let prop;\n    for (prop in obj2) {\n        try {\n            obj[prop] = isObject(obj2[prop]) ? merge(obj[prop], obj2[prop]) : obj2[prop];\n        } catch (e) {\n            obj[prop] = obj2[prop];\n        }\n    }\n}\n\nexport function findItem(arr, value) {\n    return arr.indexOf(value) !== -1\n}\n\nexport function toString(exp) {\n    return exp + \"\";\n}\n\nexport function formatEvent(eventName) {\n    return eventName.slice(2).toLowerCase();\n}\n\nexport function toInitialUpperCase(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function defineProp(obj, prop, getter, setter) {\n    let descriptor = {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n    };\n    Object.defineProperty(obj, prop, descriptor);\n}\n\nexport function getKeys(obj) {\n    return Object.keys(obj);\n}\n","// Base\nexport { Metadata } from './src/metadata/Metadata';\nexport { MetadataManager } from './src/metadata/MetadataManager';\nexport { Container } from './src/injector/Container';\nexport { ContainerLoader } from './src/boot/ContainerLoader';\n\nexport { AbstractPackageBoot } from './src/boot/package/AbstractPackageBoot';\n\nexport { Kernel } from './Kernel';\n\nexport { BaseTypes } from './src/base/BaseTypes';\n\n\nexport { Vessel } from './src/base/Vessel';\n\nexport { Bridge } from './src/services/Bridge';\nexport { RemoteService } from './src/services/RemoteService';\nexport { Service } from './src/services/Service';\nexport { HttpBridge } from './src/services/http/HttpBridge';\nexport { StorageBridge } from './src/services/storage/StorageBridge';\n\nexport { Model } from './src/base/model/Model';\nexport { Controller } from './src/base/controller/Controller';\nexport { View } from './src/base/view/View';\nexport { Collection } from './src/base/collection/Collection';\n\n\n// Boot\nexport { BaseApp } from './src/boot/app/App';\n\n// Common\nexport { Types } from './src/common/utils/Types';\nexport { RegExp } from './src/common/utils/RegExp';\nexport { MultipleKeyObject } from './src/common/utils/MultipleKeyObject';\nexport  *  from './src/common/utils/utilities';\n\n\n// Services\n\n","import { Vessel } from \"@vessel/core\";\n\nexport class Router {\n\n    public renderRoute(routeName, ...args) {\n        let controller,\n            route,\n            cachedRoutes,\n            container = Vessel.$container,\n            metadataManager = container.get('@metadata_manager');\n\n        cachedRoutes = metadataManager.getRawData('cached_routes');\n        route = cachedRoutes.get(routeName);\n        controller = container.loadModule(route.context.constructor);\n\n        if (!route) {\n            throw new TypeError(\"Cannot render non-existent route: '\"+routeName+\"'.\");\n        }\n\n        return route.bound.call(controller, ...args);\n    }\n\n}","import { Router } from '../Router';\nimport { AbstractPackageBoot } from '@vessel/core';\n\nexport class RouterBoot extends AbstractPackageBoot {\n\n    protected VERSION = '1.0.0-DEV';\n\n    public register(container) {\n        container.registerSingleModule('@router', Router);\n    }\n\n    public setup(namespace, container) {\n        namespace.router = container.get('@router');\n    }\n\n}\n\n\n","import { Vessel, MultipleKeyObject } from '@vessel/core';\n\nexport function route(routeName, routePath=undefined) {\n    return function(proto, name, descriptor) {\n        let routes,\n            metadataManager = Vessel.$container.get('@metadata_manager');\n\n        routes = metadataManager.getRawData('cached_routes');\n\n        if (!routes) {\n            routes = new MultipleKeyObject();\n        }\n\n        routes.set([routeName, routePath], {\n            routeName: routeName,\n            routePath: routePath,\n            bound: descriptor.value,\n            context: proto\n        });\n\n        metadataManager.addRawData('cached_routes', routes);\n    }\n}","export const app = {\n    baseUrl: 'http://mrtz.es'\n\n};","import { Kernel } from '@vessel/core';\n\nexport function bootable(constructor: any) {\n    const app = new constructor();\n    new Kernel(app).boot();\n}","import { Vessel } from '@vessel/core';\n\n/**\n * Decorator: @get(moduleName)\n *\n * Uses the @metadata_manager service\n *\n *\n * @param depName\n */\nexport function get(depName) {\n    return function(proto, attrName) {\n        let metadataManager = Vessel.$container.get('@metadata_manager'),\n            className = proto.getClassName();\n\n        metadataManager.setDependency(className, {\n            attrName: attrName,\n            depName: depName\n        });\n    }\n}","import { Vessel } from '@vessel/core';\n\n/**\n * Decorator: @attr\n *\n * Adds the names of the custom model attributes to\n * the metadata manager.\n *\n * This will be used by the framework so it knows what\n * are the model attributes.\n *\n * @param proto\n * @param attrName\n */\nexport function attr(proto, attrName) {\n    let metadataManager = Vessel.$container.get('@metadata_manager'),\n        className = proto.getClassName();\n\n    metadataManager.setAttribute(className, attrName);\n}","import { Vessel } from '@vessel/core';\n\n/**\n * Decorator: @attr\n *\n * Adds the name of the identifier attribute to\n * the metadata manager.\n *\n * This will be used by the framework so it knows what\n * are the model identifier.\n *\n * @param proto\n * @param attrName\n */\nexport function identifier(proto, attrName) {\n    let metadataManager = Vessel.$container.get('@metadata_manager'),\n        className = proto.getClassName();\n\n    metadataManager.setIdentifier(className, attrName);\n}","import { Vessel } from '@vessel/core';\n/**\n * Decorator: @collection\n *\n * Adds the name of the custom collection attribute to\n * the metadata manager.\n *\n * This will be used by the framework so it knows\n * what is the collection array attribute which\n * will be used to store the models.\n *\n *\n * @param proto\n * @param attrName\n */\nexport function collection(proto: any, attrName: string){\n    let metadataManager = Vessel.$container.get('@metadata_manager'),\n        className = proto.getClassName();\n\n    metadataManager.setCollection(className, attrName);\n}","import {isFunction} from \"@vessel/core\";\n/**\n * Decorator: @validate( <validate function> )\n *\n * Alters the original setter so each time\n * it is invoked it will proceed as follows:\n *\n *  1. Calls the built-in _validate function. This\n *  is a built-in framework function, responsible\n *  for general validation.\n *  2. The _validation function will delegate to\n *  the given validate function\n *  3. If the passed in validate function returns\n *  true it'll execute the setter.\n *  *3b. If the validate function results in false,\n *  The new value will not be setted.\n *\n * @param validationFn\n * @returns descriptor object\n */\nexport function validate(validationFn) {\n    return function(proto, setterName, descriptor) {\n        if ( !isFunction(validationFn) ) {\n            throw TypeError(\"The @validate() decorator, \" +\n                \"applied to '\" + setterName + \"()', requires a \" +\n                \"valid validator function as parameter to be \" +\n                \"passed in.\");\n        }\n\n        let boundFn = descriptor.value;\n        descriptor.value = function setAttribute(value) {\n            if ( this._validate(value, validationFn) ) {\n                return boundFn.call(this, value);\n            }\n        };\n        return descriptor;\n    }\n}","import { Model as BaseModel } from '@vessel/core';\nimport { attr, identifier, validate } from '@vessel/decorators';\nimport { ModelInterface } from '@vessel/types';\n\nexport class TodoModel extends BaseModel implements ModelInterface {\n\n    @identifier\n    @attr\n    public id;\n\n    @attr\n    public author;\n\n    @attr\n    public body;\n\n    @attr\n    public date;\n\n    protected bridge = 'service.todo';\n\n\n    getId() {\n        return this.attr.id;\n    }\n\n    setId(value) {\n        this.attr.id = value;\n\n        return this\n    }\n\n\n    getAuthor() {\n        return this.attr.author;\n    }\n\n    @validate(\n        function validateAuthor(value) {\n            if (!(value.length >= 3 && value.length <= 20) ) {\n                console.warn(\"Author length must be greater \" +\n                    \"than 3 characters or less than 20.\");\n                return false;\n            }\n            return true;\n        }\n    )\n    setAuthor(value) {\n        this.attr.author = value;\n\n        return this;\n    }\n\n    getBody() {\n        return this.attr.body;\n    }\n\n    @validate(\n        function validateBody(value) {\n            if (!(value.length >= 0 && value.length <= 120) ) {\n                throw TypeError(\"Body length must be less \" +\n                    \"than 120 characters and must not be empty.\");\n            }\n            return true;\n        }\n    )\n    setBody(value) {\n        this.attr.body = value;\n\n        return this;\n    }\n\n}","import { Controller as BaseController } from '@vessel/core';\n\nimport { route } from '@vessel/router';\nimport { get } from '@vessel/decorators';\n\nimport { TodoModel } from '../model/TodoModel';\n\nexport class TodoController extends BaseController {\n\n    @get('collection.todo')\n    public collection;\n\n    @route('todo_index', '/')\n    public indexTodo() {\n\n    }\n\n    @route('todo_edit', '/edit/{id}')\n    public async editTodo(id) {\n        let todo = new TodoModel();\n        /*todo.setId(id)\n            .setAuthor('Peter')\n            .setBody('This is a todo body!')*/\n\n        let response = await this.collection.fetch();\n\n        this.render('view.todo', { id: response.description });\n    }\n\n    @route('todo_create')\n    public createTodo() {\n    }\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { get, collection } from '@vessel/decorators';\n\nimport { TodoModel } from '../model/TodoModel';\n\n\nexport class TodoCollection extends BaseCollection {\n\n    protected bridge = 'service.todo';\n\n    @collection\n    public todos = [];\n\n    public model = TodoModel;\n\n    @get('collection.test')\n    public testCollection;\n\n    @get('collection.fifth')\n    public fifthCollection;\n\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { get, collection } from '@vessel/decorators';\n\n\nexport class ThirdCollection extends BaseCollection {\n\n    @get('collection.fourth')\n    public fourthCollection;\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { get } from '@vessel/decorators';\n\nexport class TestCollection extends BaseCollection {\n\n    @get('collection.third')\n    public thirdCollection;\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { collection } from '@vessel/decorators';\n\n\n\nexport class FourthCollection extends BaseCollection {\n\n    public test = \"test\";\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { collection } from '@vessel/decorators';\n\nexport class FifthCollection extends BaseCollection {\n\n    public test = \"fifth\";\n\n}","import { View } from '@vessel/core';\nimport { VirtualDOM } from '@vessel/dom';\n\nexport class TodoView extends View {\n\n    public parent = '#todo-root';\n\n    public constructor() {\n        super();\n        this.onRefresh = this.onRefresh.bind(this);\n    }\n\n    public onRefresh() {\n        this.renderRoute('todo_edit', ++this.state.id);\n    }\n\n    public render() {\n        let div, p, i, button, input,\n            self = this;\n\n        div = this.create('div')\n            .set({\n                'class' : 'todo-class'\n            })\n            .css({\n                'color': 'red'\n            });\n\n        p = this.create('p')\n            .text(\"I'm the todo id \")\n            .appendTo(div);\n\n        i = this.create('i')\n            .text(this.state.id)\n            .appendTo(p);\n\n        input = this.create('input')\n            .set({\n                'id': 'input'\n            })\n            .appendTo(div);\n\n        button = this.create('button')\n            .text(\"Refresh\")\n            .click(self.onRefresh)\n            .appendTo(div);\n\n        return div;\n    }\n\n}","import { HttpBridge } from '@vessel/core';\n\nexport class TodoService extends HttpBridge {\n\n    protected endPoint = '/api/public/v1/user';\n\n    protected getResponse(response) {\n        return JSON.parse(response);\n    }\n\n    public create(jsonResponse, model) {\n        model.setId(jsonResponse.id);\n        return model;\n    }\n\n    public read(jsonResponse, obj) {\n        return jsonResponse;\n    }\n\n    public update(jsonResponse, model) {\n        return model;\n    }\n\n    public destroy(jsonResponse) {\n        return jsonResponse.id;\n    }\n\n\n}","import { TodoController } from \"../controller/TodoController\";\n\nimport { TodoModel } from '../model/TodoModel';\n\nimport { TodoCollection } from '../collection/TodoCollection';\nimport { ThirdCollection } from \"../collection/ThirdCollection\";\nimport { TestCollection } from \"../collection/TestCollection\";\nimport { FourthCollection } from \"../collection/FourthCollection\";\nimport { FifthCollection } from \"../collection/FifthCollection\";\n\nimport { TodoView } from \"../view/TodoView\";\n\nimport { TodoService } from \"../service/TodoService\";\n\nexport const modules = {\n\n    models: {\n        'model.todo': TodoModel,\n    },\n\n    controllers: {\n        'controller.todo': TodoController\n    },\n\n    collections: {\n        'collection.todo': TodoCollection,\n        'collection.test': TestCollection,\n        'collection.third': ThirdCollection,\n        'collection.fourth': FourthCollection,\n        'collection.fifth': FifthCollection\n    },\n\n    views: {\n        'view.todo': TodoView\n    },\n\n    services: {\n        'service.todo': TodoService\n    }\n\n};","import { RouterBoot } from '@vessel/router';\nimport { VirtualDOMBoot } from '@vessel/dom';\n\nimport { app as appConfig } from './config/app';\nimport { modules } from './config/modules';\nimport { BaseApp } from '@vessel/core';\nimport { bootable } from '@vessel/decorators';\n\nimport { MultipleKeyObject } from '@vessel/core';\n\n\n@bootable\nclass App extends BaseApp {\n\n    public registerConfig() {\n        return appConfig;\n    }\n\n    public registerModules() {\n        return modules;\n    }\n\n    public registerPackages() {\n        return [\n            new RouterBoot(),\n            new VirtualDOMBoot()\n        ];\n    }\n\n    public getGlobalName() {\n        return '$App';\n    }\n\n}"],"names":["MetadataManager","Container","ContainerLoader","Kernel","Vessel","tslib_1.__extends","RemoteService","Service","HttpBridge","Bridge","Model","Controller","View","Collection","BaseApp","MultipleKeyObject","BaseModel","tslib_1.__decorate","BaseController","BaseCollection","appConfig"],"mappings":"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"}