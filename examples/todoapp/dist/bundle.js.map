{"version":3,"file":"bundle.js","sources":["../node_modules/@vessel/core/src/base/model/proxy.ts","../node_modules/@vessel/core/src/base/model/model.ts","../node_modules/@vessel/core/src/base/collection/collection.ts","../node_modules/@vessel/core/src/base/vessel.ts","../node_modules/@vessel/core/src/boot/app/app.ts","../node_modules/@vessel/core/src/common/utils/utilities.ts","../node_modules/@vessel/core/index.ts","../node_modules/@vessel/injector/src/container.ts","../node_modules/@vessel/injector/src/boot/boot.ts","../node_modules/@vessel/injector/src/decorators/get.ts","../node_modules/@vessel/injector/index.ts","../node_modules/@vessel/decorators/src/attr.ts","../node_modules/@vessel/decorators/src/validate.ts","../node_modules/@vessel/decorators/src/collection.ts","../src/Model/TodoModel.ts","../src/Collection/TodoCollection.ts","../src/main.ts"],"sourcesContent":["import { defineProp } from '@vessel/core';\n\n/**\n * Attribute proxy.\n *\n * Intercepts each setter/getter of\n * each model's attribute so it can\n * trigger events.\n */\nexport class AttribProxy {\n\n    /**\n     * Stores the state of the\n     * model's attributes.\n     *\n     * @type {any{} }\n     */\n    public data = <any>{};\n\n    /**\n     * Setups a new attribute, installs\n     * the getter and setter interceptors.\n     *\n     * @param name\n     */\n    public addAttribute( name: string ) {\n        this.data[name] = \"\";\n        defineProp(this, name,\n            function getter() {\n                return this.data[name];\n            },\n            function setter( value ) {\n                this.data[name] = value;\n            }\n        )\n    }\n\n}","import { AttribProxy } from './proxy';\nimport { isArrayEmpty } from '@vessel/core';\nimport { ModelInterface } from '@vessel/types/definitions';\n\n/**\n * BaseModel class\n */\nexport class Model implements ModelInterface {\n\n    /**\n     * Stores the attribute proxy.\n     */\n    protected attr: any;\n\n    public constructor() {\n        this._createProxy();\n    }\n\n    /**\n     * Provides a way to set multiple\n     * attributes at once.\n     *\n     * @param attrs\n     */\n    // TODO - Validation within set\n    public set( attrs ) {\n        for (let attr in attrs) {\n            this.attr[attr] = attrs[attr];\n        }\n    }\n\n    /**\n     * Instances the attribute proxy, it adds each\n     * attribute defined in the model with the\n     * 'attr' decorator to the proxy.\n     * @private\n     */\n    protected _createProxy() {\n        let metadataKey = this._getMetadataKey();\n        if ( isArrayEmpty(metadataKey) )\n            throw TypeError(\"Attempt to create a proxy\" +\n                \" with no metadata.\");\n\n        this.attr = new AttribProxy();\n        for (let attrName of metadataKey) {\n            this.attr.addAttribute(attrName);\n        }\n    }\n\n    /**\n     * Whenever a validation takes place, this\n     * function will be invoked. All built-in\n     * general validations will be checked here.\n     *\n     * This function is responsible for return\n     * the results of the custom defined\n     * validationFn.\n     *\n     * @param value\n     * @param validationFn\n     * @returns boolean\n     * @private\n     */\n    protected _validate( value, validationFn ) {\n        return validationFn(value);\n    }\n\n    private _getMetadataKey() {\n        return \"__metadata__\" + this._getClassName() + \"__\";\n    }\n\n    private _getClassName(): string {\n        return this.constructor.name;\n    }\n\n}","import { isArray, filterOne, filter, matchPair, map } from '@vessel/core';\nimport { ModelInterface } from '@vessel/types/definitions';\n\nlet prefixAttr = 'attr';\n\nexport abstract class Collection {\n\n    public collection: ModelInterface[];\n    public model;\n\n    public add(...args) {\n        let collection = this.getCollection(),\n            Model = this.model,\n            metadataKey = this._getMetadataKey();\n        try {\n            collection.push(new Model(...args));\n        } catch(e) {\n            if (e instanceof TypeError) {\n                if ( !isArray(collection) ) {\n                    console.error(\"TypeError: The collection '\" +\n                        metadataKey + \"' (\" + typeof collection +\n                        \") must be an array.\");\n                }\n            }\n        }\n    }\n\n    public find(attrs) {\n        return filterOne(this.getCollection(), function(item){\n            return matchPair(item[prefixAttr], attrs);\n        });\n    }\n\n    public findAll(attrs) {\n        return filter(this.getCollection(), function(item){\n            return matchPair(item[prefixAttr], attrs);\n        });\n    }\n\n    public pull(attrName) {\n        return map(this.getCollection(), function(item){\n            return item[prefixAttr][attrName];\n        });\n    }\n\n    public sort() {\n\n    }\n\n    public remove() {\n\n    }\n\n    public removeById() {\n\n    }\n\n    public update() {\n\n    }\n\n    public save() {\n\n    }\n\n    public fetch() {\n\n    }\n\n    protected willRetrieve() {\n        return this;\n    }\n\n    private getCollection() {\n        let metadataKey = this._getMetadataKey();\n        return this[this[metadataKey]];\n    }\n\n    private _getMetadataKey() {\n        return \"__metadata__\" + this._getClassName() + \"__\";\n    }\n\n    private _getClassName(): string {\n        return this.constructor.name;\n    }\n\n\n}","/**\n * Vessel's Main class.\n *\n * Models, views, collections\n * will inherit this class.\n */\nexport class Vessel {\n    public version;\n\n    constructor() {\n        this.version = \"0.0.1-pre\";\n    }\n\n    private _getClassName(): string {\n        return this.constructor.name;\n    }\n}\n\n\n","import { isSupported } from '@vessel/core';\nimport { AppInterface } from '@vessel/types/definitions';\n\nexport class App implements AppInterface {\n\n\tpublic can;\n\n\tpublic browserBoot(): AppInterface {\n\t\tthis.detectBrowserFeatures();\n\t\treturn this;\n\t}\n\n\tprivate detectBrowserFeatures(): AppInterface {\n\t\tthis.can = {\n\t\t\tWeakMap: isSupported( (<any>window).WeakMap )\n\t\t}\n\t\treturn this;\n\t}\n\n}\n","export function getDate() {\n\tconsole.log('Get date!');\n}\n\nexport function checkDate() {\n\tconsole.log('checkDate!');\n}\n\nexport function isSupported( feature ) {\n\treturn typeof feature == 'function';\n}\n\nexport function isArray( arr ) {\n    return Array.isArray(arr);\n}\n\nexport function isArrayEmpty( arr ) {\n    if (!arr) return true;\n    if (arr.length === 0) return true;\n    return false;\n}\n\nexport function findItem( arr, value ) {\n    return arr.indexOf(value) !== -1\n}\n\nexport function isFunction( fn ) {\n    if ( fn == undefined ) return false;\n    if ( typeof fn !== \"function\" ) return false;\n    return true;\n}\n\nexport function defineProp( obj, prop, getter, setter ) {\n    let descriptor = {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n    }\n    Object.defineProperty( obj, prop, descriptor );\n}\n\nexport function getKeys(obj) {\n    return Object.keys(obj);\n}\n\nexport function each(obj, fn, context=null) {\n    var i, len, keys, item, result;\n    if (!obj) return;\n    if (isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n            result = fn.call(context, obj[i], i, obj);\n        }\n    } else {\n        keys = getKeys(obj);\n        for (i = 0, len = keys.length; i < len; i++) {\n            item = keys[i];\n            result = fn.call(context, item, obj[item], obj);\n        }\n    }\n    return result;\n}\n\nexport function matchPair(obj, attrs) {\n    var keys = getKeys(attrs),\n        len = keys.length,\n        key, i;\n    for (i = 0; i < len; i++) {\n        key = keys[i];\n        if (attrs[key] !== obj[key] || !(key in obj))\n            return false;\n    }\n    return true;\n}\n\nexport function map(arr, fn, context=null) {\n    var newArr = [], result;\n    each(arr, function(item, index) {\n        result = fn.call(context, item, index);\n        if ( result ) newArr.push(result);\n    });\n    return newArr;\n}\n\nexport function filter(obj, fn, context=null) {\n    var matches = [];\n    each(obj, function(item, index) {\n        if (fn.call(context, item, index, obj))\n            matches.push(item);\n    });\n    return matches;\n}\n\nexport function filterOne(arr, fn, context=null) {\n    var i, item, len = arr.length;\n    for (i = 0; i < len; i++) {\n        if (fn.call(context, item = arr[i], i, arr))\n            return item;\n    }\n    return false;\n}","// Base\nexport { Http } from './src/services/http/http';\nexport { Storage } from './src/services/storage/storage';\nexport { Model } from './src/base/model/model';\nexport { View } from './src/base/view/view';\nexport { Collection } from './src/base/collection/collection';\nexport { Vessel } from './src/base/vessel';\n\n// Boot\nexport { App } from './src/boot/app/app';\n\n// Common\nexport  *  from './src/common/utils/utilities';\n\n// Services\n","import { getKeys, each, findItem } from '@vessel/core';\n\nexport class Container {\n\n    private modules = {}\n\n    private cache = new WeakMap();\n\n    public register(opts) {\n        this.modules = opts;\n        return this;\n    }\n\n    public startModule(name) {\n        return this.resolveDependencies(name);\n    }\n\n    public resolveDependencies(name) {\n        let match = this.findModuleByName(name),\n            moduleType = match.type,\n            constructor = match.constructor,\n            key = \"__dependencies__\" + constructor.name + \"__\",\n            dependencies = constructor.prototype[key],\n            topParent = {\n                name: name,\n                constructor: constructor\n            };\n\n        if (!match) {\n            throw new TypeError(\"Attempt to get \" +\n                \"non-existent module: '\" +\n                name +\"'. Did you register it?\");\n        }\n\n        each(dependencies, function(item){\n            this.inject(item.depName, item.attrName, [], null, topParent);\n        }, this);\n\n        return this.loadDependency(moduleType, name);\n    }\n\n    public inject(depName, attrName, parents=[], constructor=null, topParent) {\n        let key,\n            depType,\n            depDependencies,\n            depConstructor,\n            match = this.findModuleByName(depName);\n\n        if (!match) {\n            throw new TypeError(\"Attempt to inject \" +\n                \"non-existent dependency: '\" +\n                depName +\"'. Did you register it?\");\n        }\n\n        depType = match.type;\n        depConstructor = match.constructor;\n        key = \"__dependencies__\" + depConstructor.name + \"__\";\n        depDependencies = depConstructor.prototype[key];\n\n        if (this.isCircular(depName, parents, topParent)) {\n            throw new RangeError(\"Circular dependency detected: \"+\n                \"module injection was impossible. Attempting to \"+\n                \"inject '\" + depName + \"' which have tried to \"+\n                \"resolve a parent dependency.\");\n        }\n\n        parents.push(depName);\n\n        each(depDependencies, function(item) {\n            this.inject(item.depName,\n                item.attrName,\n                parents,\n                depConstructor,\n                topParent);\n        }, this);\n\n        // Only the top-parent dependency enters here.\n\n        if (parents.length === 1) {\n            // Inject the very first parent dependency\n            // to the module prototype.\n            return topParent.constructor.prototype[attrName] = this.loadDependency(depType, depName);\n        }\n\n        // Children dependencies enter here.\n\n        parents.pop();\n        // Inject the dependency to the parent prototype.\n        return constructor.prototype[attrName] = this.loadDependency(depType, depName);\n    }\n\n    // Module is requested by get() as dependency\n    loadDependency(type, name) {\n        let constructor = this.modules[type][name];\n\n        if (type !== 'models')\n            return this.loadModule(constructor);\n\n        return constructor;\n    }\n\n    // Module is requested by startModule()\n    loadModule(constructor) {\n        let cache = this.cache;\n\n        if (!cache.has(constructor))\n            cache.set(constructor, new constructor());\n\n        return cache.get(constructor);\n    }\n\n    // Factorizar findModule\n    findModuleByName(queryName) {\n        let i,\n            moduleType,\n            module,\n            modules = this.modules,\n            keys = getKeys(modules),\n            len = keys.length;\n        for (i = 0; i < len; i++) {\n            moduleType = keys[i];\n            module = modules[moduleType];\n            if (module.hasOwnProperty(queryName))\n                return {\n                    type: moduleType,\n                    name: queryName,\n                    constructor: modules[moduleType][queryName]\n                };\n        }\n        return null;\n    }\n\n    isCircular(depName, parents, topParent) {\n        return depName === topParent.name || findItem(parents, depName)\n    }\n}","import { Container } from \"../container\";\n\nexport function setupContainer(namespace ) {\n    return namespace.container = new Container();\n}","/**\n * Decorator: @get(moduleName)\n *\n * Adds the dependencies to the\n * <Prototype>.dependenciesKEY. This will\n * be used by the framework so it knows what\n * are the dependencies that it will need.\n * The resolved module will be injected into\n * the applied attribute.\n *\n * Why Dependency Key?\n *\n * Since in javascript/ts decorators are executed\n * at runtime, we cannot access to instances, we\n * will be able to modify the prototype only.\n * That's great until developers extends its\n * classes (for example Model BasketBall extends\n * Model Ball), that said we need classes to have\n * its own metadata key which is accesible by\n * its children but each class will modify only\n * its own metadata key.\n *\n * Symbols and WeakMaps are great, but we need\n * a key variable to store them so the instance can\n * retrieve it later, and we have no access\n * to the instances, so we couldn't assign a different\n * symbol stored in the same variable in the prototype.\n *\n * We don't want private key properties between instances,\n * but between prototypes.\n *\n * @param depName\n * @returns {(constructor:any, attrName:any, $depName:any)=>undefined}\n */\nexport function get(depName) {\n    return function(proto, attrName) {\n        let className = proto._getClassName(),\n            key = \"__dependencies__\" + className + \"__\";\n        if (!proto.hasOwnProperty(key)) {\n            proto[key] = [];\n        }\n        proto[key].push({\n            attrName: attrName,\n            depName: depName\n        });\n    }\n}","// Boot\nexport { setupContainer } from './src/boot/boot';\n\n// Decorators\nexport { get } from './src/decorators/get';","/**\n * Decorator: @attr\n *\n * Adds the names of the custom attributes to\n * <ModelPrototype>.metadataKEY. This will\n * be used by the framework so it knows what\n * are the model attributes that it will need.\n *\n * Why Metadata Key?\n *\n * Since in javascript/ts decorators are executed\n * at runtime, we cannot access to instances, we\n * will be able to modify the prototype only.\n * That's great until developers extends its\n * classes (for example Model BasketBall extends\n * Model Ball), that said we need classes to have\n * its own metadata key which is accesible by\n * its children but each class will modify only\n * its own metadata key.\n *\n * Symbols and WeakMaps are great, but we need\n * a key variable to store them so the instance can\n * retrieve it later, and we have no access\n * to the instances, so we couldn't assign a different\n * symbol stored in the same variable in the prototype.\n *\n * We don't want private key properties between instances,\n * but between prototypes.\n *\n * @param proto\n * @param attrName\n */\nexport function attr(proto, attrName) {\n    let className = proto._getClassName(),\n        key = \"__metadata__\" + className + \"__\";\n    if (!proto.hasOwnProperty(key)) {\n        proto[key] = [];\n    }\n    proto[key].push(attrName);\n}","import {isFunction} from \"@vessel/core\";\n/**\n * Decorator: @validate( <validate function> )\n *\n * Alters the original setter so each time\n * it is invoked it will proceed as follows:\n *\n *  1. Calls the built-in _validate function. This\n *  is a built-in framework function, responsible\n *  for general validation.\n *  2. The _validation function will delegate to\n *  the given validate function\n *  3. If the passed in validate function returns\n *  true it'll execute the setter.\n *  *3b. If the validate function results in false,\n *  The new value will not be setted.\n *\n * @param validationFn\n * @returns descriptor object\n */\nexport function validate(validationFn) {\n    return function(proto, setterName, descriptor) {\n        if ( !isFunction(validationFn) ) {\n            throw TypeError(\"The @validate() decorator, \" +\n                \"applied to '\" + setterName + \"()', requires a \" +\n                \"valid validator function as parameter to be \" +\n                \"passed in.\");\n        }\n\n        let boundFn = descriptor.value;\n        descriptor.value = function setAttribute(value) {\n            if ( this._validate(value, validationFn) ) {\n                boundFn.call(this, value);\n            }\n        }\n        return descriptor;\n    }\n}","/**\n * Decorator: @collection\n *\n * Adds the name of the custom attribute to\n * <CollectionPrototype>.metadataKEY. This\n * will be used by the framework so it knows\n * what is the collection attribute which\n * will store the models.\n *\n * Why Metadata Key?\n *\n * Since in javascript/ts decorators are executed\n * at runtime, we cannot access to instances, we\n * will be able to modify the prototype only.\n * That's great until developers extends its\n * classes (for example Model BasketBall extends\n * Model Ball), that said we need classes to have\n * its own metadata key which is accesible by\n * its children but each class will modify only\n * its own metadata key.\n *\n * Symbols and WeakMaps are great, but we need\n * a key variable to store them so the instance can\n * retrieve it later, and we have no access\n * to the instances, so we couldn't assign a different\n * symbol stored in the same variable in the prototype.\n *\n * We don't want private key properties between instances,\n * but between prototypes.\n *\n * @param proto\n * @param attrName\n */\nexport function collection(proto, attrName) {\n    let className = proto._getClassName(),\n        key = \"__metadata__\" + className + \"__\";\n    if (!proto.hasOwnProperty(key)) {\n        proto[key] = '';\n    }\n    proto[key] = attrName;\n}","import { Model as BaseModel } from '@vessel/core';\nimport { attr, validate } from '@vessel/decorators';\nimport { ModelInterface } from '@vessel/types';\n\nexport class TodoModel extends BaseModel implements ModelInterface {\n\n    @attr\n    public author;\n\n    @attr\n    public body;\n\n    @attr\n    public date;\n\n    constructor(author, body ) {\n        super();\n        this.setAuthor( author );\n        this.setBody( body );\n    }\n\n    getAuthor() {\n        return this.attr.author;\n    }\n\n    @validate(\n        function validateAuthor(value) {\n            if (!(value.length >= 3 && value.length <= 20) ) {\n                console.warn(\"Author length must be greater \" +\n                    \"than 3 characters or less than 20.\");\n                return false;\n            }\n            return true;\n        }\n    )\n    setAuthor(value) {\n        this.attr.author = value;\n    }\n\n    getBody() {\n        return this.attr.body;\n    }\n\n    @validate(\n        function(value) {\n            if (!(value.length >= 0 && value.length <= 120) ) {\n                throw TypeError(\"Body length must be less \" +\n                    \"than 120 characters and must not be empty.\");\n            }\n            return true;\n        }\n    )\n    setBody(value) {\n        this.attr.body = value;\n    }\n\n}","import { Collection as BaseCollection } from '@vessel/core';\nimport { collection } from '@vessel/decorators';\n\nimport { get } from '@vessel/injector';\n\nexport class TodoCollection extends BaseCollection {\n\n    @collection\n    public todos = [];\n\n    @get('model.todo')\n    public model;\n\n}","import { Collection, View, App } from '@vessel/core';\nimport { setupContainer } from '@vessel/injector';\n\nimport { TodoModel } from './Model/TodoModel';\nimport { TodoCollection } from './Collection/TodoCollection';\n\nimport {TestCollection} from \"./Collection/TestCollection\";\nimport {TestModel} from \"./Model/TestModel\";\n\n\n\ndeclare var $App;\n\n$App = new App().browserBoot();\n\nsetupContainer($App).register({\n    models: {\n        'model.todo': TodoModel,\n    },\n    collections: {\n        'collection.todos': TodoCollection\n    },\n    views: {\n    }\n});\n\nvar x = $App.container.startModule('collection.todos');\n\n\n\n//app.x = new TodoModel('pe', 'body 1');\n//app.y = new TodoModel('alex', 'body 2');\n\n/*x\n$App[\"collection\"] = new TodoCollection();\n$App[\"collection\"].add('pedro!', 'body 1');\n\n$App[\"collection2\"] = new TestCollection();\n\n$App[\"model\"] = new TodoModel('pedro', 'jejejej');\n$App[\"model2\"] = new TestModel('nombree');\n*/"],"names":["Model","Collection","App","BaseModel","BaseCollection"],"mappings":";;;;;;;;;;;;;AAEA;;;;;;;AAOO;IAAA;;;;;;;QAQI,SAAI,GAAQ,EAAE,CAAC;KAoBzB;;;;;;;IAZU,kCAAY,GAAnB,UAAqB,IAAY;QAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QACrB,UAAU,CAAC,IAAI,EAAE,IAAI,EACjB;YACI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B,EACD,gBAAiB,KAAK;YAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SAC3B,CACJ,CAAA;KACJ;IAEL,kBAAC;CAAA,IAAA,AACD;;AClCA;;;AAGO;IAOH;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;;;;;;;;IASMA,sBAAG,GAAV,UAAY,KAAK;QACb,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;SACjC;KACJ;;;;;;;IAQSA,+BAAY,GAAtB;QACI,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,IAAK,YAAY,CAAC,WAAW,CAAE;YAC3B,MAAM,SAAS,CAAC,2BAA2B;gBACvC,oBAAoB,CAAC,CAAC;QAE9B,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,EAAE,CAAC;QAC9B,KAAqB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;YAA3B,IAAI,QAAQ,oBAAA;YACb,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;SACpC;KACJ;;;;;;;;;;;;;;;IAgBSA,4BAAS,GAAnB,UAAqB,KAAK,EAAE,YAAY;QACpC,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;KAC9B;IAEOA,kCAAe,GAAvB;QACI,OAAO,cAAc,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC;KACvD;IAEOA,gCAAa,GAArB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;KAChC;IAEL,eAAC;CAAA,IAAA,AACD;;ACzEA,IAAI,UAAU,GAAG,MAAM,CAAC;AAEjB;IAAA;KAkFN;IA7EUC,2BAAG,GAAV;QAAW,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QACd,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,EACjCD,QAAK,GAAG,IAAI,CAAC,KAAK,EAClB,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,IAAI;YACA,UAAU,CAAC,IAAI,MAAKA,QAAK,YAALA,QAAK,kBAAI,IAAI,MAAE,CAAC;SACvC;QAAC,OAAM,CAAC,EAAE;YACP,IAAI,CAAC,YAAY,SAAS,EAAE;gBACxB,IAAK,CAAC,OAAO,CAAC,UAAU,CAAE,EAAE;oBACxB,OAAO,CAAC,KAAK,CAAC,6BAA6B;wBACvC,WAAW,GAAG,KAAK,GAAG,OAAO,UAAU;wBACvC,qBAAqB,CAAC,CAAC;iBAC9B;aACJ;SACJ;KACJ;IAEMC,4BAAI,GAAX,UAAY,KAAK;QACb,OAAO,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,UAAS,IAAI;YAChD,OAAO,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;SAC7C,CAAC,CAAC;KACN;IAEMA,+BAAO,GAAd,UAAe,KAAK;QAChB,OAAO,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,UAAS,IAAI;YAC7C,OAAO,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;SAC7C,CAAC,CAAC;KACN;IAEMA,4BAAI,GAAX,UAAY,QAAQ;QAChB,OAAO,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,UAAS,IAAI;YAC1C,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC;SACrC,CAAC,CAAC;KACN;IAEMA,4BAAI,GAAX;KAEC;IAEMA,8BAAM,GAAb;KAEC;IAEMA,kCAAU,GAAjB;KAEC;IAEMA,8BAAM,GAAb;KAEC;IAEMA,4BAAI,GAAX;KAEC;IAEMA,6BAAK,GAAZ;KAEC;IAESA,oCAAY,GAAtB;QACI,OAAO,IAAI,CAAC;KACf;IAEOA,qCAAa,GAArB;QACI,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;KAClC;IAEOA,uCAAe,GAAvB;QACI,OAAO,cAAc,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC;KACvD;IAEOA,qCAAa,GAArB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;KAChC;IAGL,oBAAC;CAAA,IAAA,AACD;;ACxFA;;;;;GAKG,AACI,AAGH,AAIQ,AAGZ,AAIA;;ACjBO;IAAA;KAgBN;IAZOC,4BAAW,GAAlB;QACC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,OAAO,IAAI,CAAC;KACZ;IAEOA,sCAAqB,GAA7B;QACC,IAAI,CAAC,GAAG,GAAG;YACV,OAAO,EAAE,WAAW,CAAQ,MAAO,CAAC,OAAO,CAAE;SAC7C,CAAA;QACD,OAAO,IAAI,CAAC;KACZ;IAEF,aAAC;CAAA,IAAA,AAED;;qBCb6B,OAAO;IACnC,OAAO,OAAO,OAAO,IAAI,UAAU,CAAC;CACpC;AAED,iBAAyB,GAAG;IACxB,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;CAC7B;AAED,sBAA8B,GAAG;IAC7B,IAAI,CAAC,GAAG;QAAE,OAAO,IAAI,CAAC;IACtB,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IAClC,OAAO,KAAK,CAAC;CAChB;AAED,kBAA0B,GAAG,EAAE,KAAK;IAChC,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;CACnC;AAED,oBAA4B,EAAE;IAC1B,IAAK,EAAE,IAAI,SAAU;QAAE,OAAO,KAAK,CAAC;IACpC,IAAK,OAAO,EAAE,KAAK,UAAW;QAAE,OAAO,KAAK,CAAC;IAC7C,OAAO,IAAI,CAAC;CACf;AAED,oBAA4B,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM;IACjD,IAAI,UAAU,GAAG;QACb,UAAU,EAAE,KAAK;QACjB,YAAY,EAAE,IAAI;QAClB,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;KACd,CAAA;IACD,MAAM,CAAC,cAAc,CAAE,GAAG,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC;CAClD;AAED,iBAAwB,GAAG;IACvB,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC3B;AAED,cAAqB,GAAG,EAAE,EAAE,EAAE,OAAY;IAAZ,wBAAA,EAAA,cAAY;IACtC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;IAC/B,IAAI,CAAC,GAAG;QAAE,OAAO;IACjB,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;QACd,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACxC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;SAC7C;KACJ;SAAM;QACH,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACpB,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACf,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SACnD;KACJ;IACD,OAAO,MAAM,CAAC;CACjB;AAED,mBAA0B,GAAG,EAAE,KAAK;IAChC,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,EACrB,GAAG,GAAG,IAAI,CAAC,MAAM,EACjB,GAAG,EAAE,CAAC,CAAC;IACX,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QACtB,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC;YACxC,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,IAAI,CAAC;CACf;AAED,aAAoB,GAAG,EAAE,EAAE,EAAE,OAAY;IAAZ,wBAAA,EAAA,cAAY;IACrC,IAAI,MAAM,GAAG,EAAE,EAAE,MAAM,CAAC;IACxB,IAAI,CAAC,GAAG,EAAE,UAAS,IAAI,EAAE,KAAK;QAC1B,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACvC,IAAK,MAAO;YAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACrC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;CACjB;AAED,gBAAuB,GAAG,EAAE,EAAE,EAAE,OAAY;IAAZ,wBAAA,EAAA,cAAY;IACxC,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,CAAC,GAAG,EAAE,UAAS,IAAI,EAAE,KAAK;QAC1B,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;YAClC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B,CAAC,CAAC;IACH,OAAO,OAAO,CAAC;CAClB;AAED,mBAA0B,GAAG,EAAE,EAAE,EAAE,OAAY;IAAZ,wBAAA,EAAA,cAAY;IAC3C,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;IAC9B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QACtB,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;YACvC,OAAO,IAAI,CAAC;KACnB;IACD,OAAO,KAAK,CAAC;CAChB;;ACpGD;AACA,AACA,AACA,AACA,AACA,AACA,AAEA,AAGA,AAGA,WAAW;;ACZJ;IAAA;QAEK,YAAO,GAAG,EAAE,CAAA;QAEZ,UAAK,GAAG,IAAI,OAAO,EAAE,CAAC;KAiIjC;IA/HU,4BAAQ,GAAf,UAAgB,IAAI;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,IAAI,CAAC;KACf;IAEM,+BAAW,GAAlB,UAAmB,IAAI;QACnB,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;KACzC;IAEM,uCAAmB,GAA1B,UAA2B,IAAI;QAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EACnC,UAAU,GAAG,KAAK,CAAC,IAAI,EACvB,WAAW,GAAG,KAAK,CAAC,WAAW,EAC/B,GAAG,GAAG,kBAAkB,GAAG,WAAW,CAAC,IAAI,GAAG,IAAI,EAClD,YAAY,GAAG,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,EACzC,SAAS,GAAG;YACR,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,WAAW;SAC3B,CAAC;QAEN,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,IAAI,SAAS,CAAC,iBAAiB;gBACjC,wBAAwB;gBACxB,IAAI,GAAE,yBAAyB,CAAC,CAAC;SACxC;QAED,IAAI,CAAC,YAAY,EAAE,UAAS,IAAI;YAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;SACjE,EAAE,IAAI,CAAC,CAAC;QAET,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;KAChD;IAEM,0BAAM,GAAb,UAAc,OAAO,EAAE,QAAQ,EAAE,OAAU,EAAE,WAAgB,EAAE,SAAS;QAAvC,wBAAA,EAAA,YAAU;QAAE,4BAAA,EAAA,kBAAgB;QACzD,IAAI,GAAG,EACH,OAAO,EACP,eAAe,EACf,cAAc,EACd,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAE3C,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,IAAI,SAAS,CAAC,oBAAoB;gBACpC,4BAA4B;gBAC5B,OAAO,GAAE,yBAAyB,CAAC,CAAC;SAC3C;QAED,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC;QACrB,cAAc,GAAG,KAAK,CAAC,WAAW,CAAC;QACnC,GAAG,GAAG,kBAAkB,GAAG,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QACtD,eAAe,GAAG,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAEhD,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,EAAE;YAC9C,MAAM,IAAI,UAAU,CAAC,gCAAgC;gBACjD,iDAAiD;gBACjD,UAAU,GAAG,OAAO,GAAG,wBAAwB;gBAC/C,8BAA8B,CAAC,CAAC;SACvC;QAED,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEtB,IAAI,CAAC,eAAe,EAAE,UAAS,IAAI;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EACpB,IAAI,CAAC,QAAQ,EACb,OAAO,EACP,cAAc,EACd,SAAS,CAAC,CAAC;SAClB,EAAE,IAAI,CAAC,CAAC;;QAIT,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;;;YAGtB,OAAO,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SAC5F;;QAID,OAAO,CAAC,GAAG,EAAE,CAAC;;QAEd,OAAO,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAClF;;IAGD,kCAAc,GAAd,UAAe,IAAI,EAAE,IAAI;QACrB,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QAE3C,IAAI,IAAI,KAAK,QAAQ;YACjB,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAExC,OAAO,WAAW,CAAC;KACtB;;IAGD,8BAAU,GAAV,UAAW,WAAW;QAClB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC;YACvB,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,WAAW,EAAE,CAAC,CAAC;QAE9C,OAAO,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;KACjC;;IAGD,oCAAgB,GAAhB,UAAiB,SAAS;QACtB,IAAI,CAAC,EACD,UAAU,EACV,MAAM,EACN,OAAO,GAAG,IAAI,CAAC,OAAO,EACtB,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,EACvB,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACtB,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;YAC7B,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;gBAChC,OAAO;oBACH,IAAI,EAAE,UAAU;oBAChB,IAAI,EAAE,SAAS;oBACf,WAAW,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC;iBAC9C,CAAC;SACT;QACD,OAAO,IAAI,CAAC;KACf;IAED,8BAAU,GAAV,UAAW,OAAO,EAAE,OAAO,EAAE,SAAS;QAClC,OAAO,OAAO,KAAK,SAAS,CAAC,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;KAClE;IACL,gBAAC;CAAA,IAAA,AACD;;wBCtI+B,SAAS;IACpC,OAAO,SAAS,CAAC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;CAChD;;ACJD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkCA,aAAoB,OAAO;IACvB,OAAO,UAAS,KAAK,EAAE,QAAQ;QAC3B,IAAI,SAAS,GAAG,KAAK,CAAC,aAAa,EAAE,EACjC,GAAG,GAAG,kBAAkB,GAAG,SAAS,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YAC5B,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACnB;QACD,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACZ,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;SACnB,CAAC,CAAC;KACN,CAAA;CACJ;;AC9CD,OAAO,AACP,AAEA;;ACHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCA,cAAqB,KAAK,EAAE,QAAQ;IAChC,IAAI,SAAS,GAAG,KAAK,CAAC,aAAa,EAAE,EACjC,GAAG,GAAG,cAAc,GAAG,SAAS,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QAC5B,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;KACnB;IACD,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;CAC7B;;ACtCD;;;;;;;;;;;;;;;;;;;AAmBA,kBAAyB,YAAY;IACjC,OAAO,UAAS,KAAK,EAAE,UAAU,EAAE,UAAU;QACzC,IAAK,CAAC,UAAU,CAAC,YAAY,CAAE,EAAE;YAC7B,MAAM,SAAS,CAAC,6BAA6B;gBACzC,cAAc,GAAG,UAAU,GAAG,kBAAkB;gBAChD,8CAA8C;gBAC9C,YAAY,CAAC,CAAC;SACrB;QAED,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC;QAC/B,UAAU,CAAC,KAAK,GAAG,sBAAsB,KAAK;YAC1C,IAAK,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,YAAY,CAAE,EAAE;gBACvC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC7B;SACJ,CAAA;QACD,OAAO,UAAU,CAAC;KACrB,CAAA;CACJ;;ACrCD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCA,oBAA2B,KAAK,EAAE,QAAQ;IACtC,IAAI,SAAS,GAAG,KAAK,CAAC,aAAa,EAAE,EACjC,GAAG,GAAG,cAAc,GAAG,SAAS,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QAC5B,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;KACnB;IACD,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;CACzB;;ACpCM;IAAwB,6BAAS;IAWpC,mBAAY,MAAM,EAAE,IAAI;QAAxB,YACI,iBAAO,SAGV;QAFG,KAAI,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;QACzB,KAAI,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;;KACxB;IAED,6BAAS,GAAT;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;KAC3B;IAYD,6BAAS,GAAT,UAAU,KAAK;QACX,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KAC5B;IAED,2BAAO,GAAP;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;KACzB;IAWD,2BAAO,GAAP,UAAQ,KAAK;QACT,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KAC1B;IAEL,gBAAC;CAAA,CApD8BC,QAAS,GAoDvC;AAjDG;IADC,IAAI;yCACS;AAGd;IADC,IAAI;uCACO;AAGZ;IADC,IAAI;uCACO;AAsBZ;IAVC,QAAQ,CACL,wBAAwB,KAAK;QACzB,IAAI,EAAE,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,EAAE,CAAE,EAAE;YAC7C,OAAO,CAAC,IAAI,CAAC,gCAAgC;gBACzC,oCAAoC,CAAC,CAAC;YAC1C,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;KACf,CACJ;0CAGA;AAeD;IATC,QAAQ,CACL,UAAS,KAAK;QACV,IAAI,EAAE,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,CAAE,EAAE;YAC9C,MAAM,SAAS,CAAC,2BAA2B;gBACvC,4CAA4C,CAAC,CAAC;SACrD;QACD,OAAO,IAAI,CAAC;KACf,CACJ;wCAGA,CAGL;;ACpDO;IAA6B,kCAAc;IAA3C;QAAA,qEAQN;QALU,WAAK,GAAG,EAAE,CAAC;;KAKrB;IAAD,qBAAC;CAAA,CARmCC,aAAc,GAQjD;AALG;IADC,UAAU;6CACO;AAGlB;IADC,GAAG,CAAC,YAAY,CAAC;6CACL,CAGjB;;ACDA,IAAI,GAAG,IAAIF,MAAG,EAAE,CAAC,WAAW,EAAE,CAAC;AAE/B,cAAc,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;IAC1B,MAAM,EAAE;QACJ,YAAY,EAAE,SAAS;KAC1B;IACD,WAAW,EAAE;QACT,kBAAkB,EAAE,cAAc;KACrC;IACD,KAAK,EAAE,EACN;CACJ,CAAC,CAAC;AAEH,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;;;;;;;;;;;EAerD"}